/* AUTO-GENERATED FILE.  DO NOT MODIFY.
 *
 * This class was automatically generated by the
 * aapt tool from the resource data it found.  It
 * should not be modified by hand.
 */

package com.biyanzhi;

public final class R {
    public static final class anim {
        public static final int down_in=0x7f040000;
        public static final int in_from_right=0x7f040001;
        public static final int load_animation=0x7f040002;
        public static final int out_to_left=0x7f040003;
        public static final int right_in=0x7f040004;
        public static final int right_out=0x7f040005;
        public static final int slide_in_from_left=0x7f040006;
        public static final int slide_out_to_right=0x7f040007;
        public static final int up_out=0x7f040008;
        public static final int voice_from_icon=0x7f040009;
        public static final int voice_to_icon=0x7f04000a;
    }
    public static final class attr {
        /** <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int absListViewStyle=0x7f01000e;
        /**  @hide Controls whether this view can take accessibility focus. 
         <p>May be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
<p>May be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>auto</code></td><td>0</td><td>
                 The system determines whether the view can take accessibility focus - default
                 (recommended).
                 <p>
                 Such a view is consideted by the focus search if it is:
                 <ul>
                 <li>
                 Important for accessibility and actionable (clickable, long clickable, focusable)
                 </li>
                 <li>
                 Important for accessibility, not actionable (clickable, long clickable, focusable),
                 and does not have an actionable predecessor.
                 </li>
                 </ul>
                 An accessibility srvice can request putting accessibility focus on such a view.
                 </p>
            </td></tr>
<tr><td><code>yes</code></td><td>1</td><td>
                 The view can take accessibility focus.
                 <p>
                 A view that can take accessibility focus is always considered during focus
                 search and an accessibility service can request putting accessibility focus
                 on it.
                 </p>
            </td></tr>
<tr><td><code>no</code></td><td>2</td><td>
                 The view can not take accessibility focus.
                 <p>
                 A view that can not take accessibility focus is never considered during focus
                 search and an accessibility service can not request putting accessibility focus
                 on it.
                 </p>
            </td></tr>
</table>
         */
        public static final int accessibilityFocusable=0x7f010054;
        /** 
             Sets whether this ViewGroup's drawable states also include
             its children's drawable states.  This is used, for example, to
             make a group appear to be focused when its child EditText or button
             is focused.
        
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int addStatesFromChildren=0x7f01005c;
        /** 
             alpha property of the view, as a value between 0 (completely transparent) and 1
             (completely opaque).
        
         <p>Must be a floating point value, such as "<code>1.2</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int alpha=0x7f010044;
        /** 
             Defines whether the ViewGroup should always draw its children using their
             drawing cache or not. The default value is true.
        
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int alwaysDrawnWithCache=0x7f01005b;
        /** 
             Defines whether changes in layout (caused by adding and removing items) should
             cause a LayoutTransition to run. When this flag is set to true, a default
             LayoutTransition object will be set on the ViewGroup container and default
             animations will run when these layout changes occur.
        
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int animateLayoutChanges=0x7f010055;
        /** 
             Defines whether layout animations should create a drawing cache for their
             children. Enabling the animation cache consumes more memory and requires
             a longer initialization but provides better performance. The animation
             cache is enabled by default.
        
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int animationCache=0x7f010059;
        /** 
             Indicates that this list will always be drawn on top of solid, single-color
             opaque background. This allows the list to optimize drawing.
        
         <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int cacheColorHint=0x7f010065;
        /** 
             Defines the choice behavior for the view. By default, lists do not have
             any choice behavior. By setting the choiceMode to singleChoice, the list
             allows up to one item to be in a chosen state. By setting the choiceMode to
             multipleChoice, the list allows any number of items to be chosen.
             Finally, by setting the choiceMode to multipleChoiceModal the list allows
             any number of items to be chosen in a special selection mode.
             The application will supply a
             {@link android.widget.AbsListView.MultiChoiceModeListener} using
             {@link android.widget.AbsListView#setMultiChoiceModeListener} to control the
             selection mode. This uses the {@link android.view.ActionMode} API.
        
         <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>none</code></td><td>0</td><td> Normal list that does not indicate choices. </td></tr>
<tr><td><code>singleChoice</code></td><td>1</td><td> The list allows up to one choice. </td></tr>
<tr><td><code>multipleChoice</code></td><td>2</td><td> The list allows multiple choices. </td></tr>
<tr><td><code>multipleChoiceModal</code></td><td>3</td><td> The list allows multiple choices in a custom selection mode. </td></tr>
</table>
         */
        public static final int choiceMode=0x7f010068;
        /**  Defines whether this view reacts to click events. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int clickable=0x7f010036;
        /** 
             Defines whether a child is limited to draw inside of its bounds or not.
             This is useful with animations that scale the size of the children to more
             than 100% for instance. In such a case, this property should be set to false
             to allow the children to draw outside of their bounds. The default value of
             this property is true.
        
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int clipChildren=0x7f010056;
        /** 
             Defines whether the ViewGroup will clip its drawing surface so as to exclude
             the padding area. This property is set to true by default.
        
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int clipToPadding=0x7f010057;
        /** 
             Defines text that briefly describes content of the view. This property is used
             primarily for accessibility. Since some views do not have textual
             representation this attribute can be used for providing such.
        
         <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int contentDescription=0x7f010041;
        /** 
             Defines the relationship between the ViewGroup and its descendants
             when looking for a View to take focus.
        
         <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>beforeDescendants</code></td><td>0</td><td> The ViewGroup will get focus before any of its descendants. </td></tr>
<tr><td><code>afterDescendants</code></td><td>1</td><td> The ViewGroup will get focus only if none of its descendants want it. </td></tr>
<tr><td><code>blocksDescendants</code></td><td>2</td><td> The ViewGroup will block its descendants from receiving focus. </td></tr>
</table>
         */
        public static final int descendantFocusability=0x7f01005d;
        /**  Drawable or color to draw between list items. 
 <attr name="divider" format="reference|color" /> 

             Height of the divider. Will use the intrinsic height of the divider if this
             is not specified.
        
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int dividerHeight=0x7f01006a;
        /** <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>left</code></td><td>0</td><td></td></tr>
<tr><td><code>right</code></td><td>1</td><td></td></tr>
<tr><td><code>top</code></td><td>2</td><td></td></tr>
<tr><td><code>bottom</code></td><td>3</td><td></td></tr>
</table>
         */
        public static final int drag_edge=0x7f010000;
        /** 
             When set to true, the selector will be drawn over the selected item.
             Otherwise the selector is drawn behind the selected item. The default
             value is false.
        
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int drawSelectorOnTop=0x7f010060;
        /** 
             Defines the quality of translucent drawing caches. This property is used
             only when the drawing cache is enabled and translucent. The default value is auto.
        
         <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>auto</code></td><td>0</td><td>
                 Lets the framework decide what quality level should be used
                 for the drawing cache.
            </td></tr>
<tr><td><code>low</code></td><td>1</td><td>
                 Low quality. When set to low quality, the drawing cache uses a lower color
                 depth, thus losing precision in rendering gradients, but uses less memory.
            </td></tr>
<tr><td><code>high</code></td><td>2</td><td>
                 High quality. When set to high quality, the drawing cache uses a higher
                 color depth but uses more memory.
            </td></tr>
</table>
         */
        public static final int drawingCacheQuality=0x7f01003a;
        /** 
             When this attribute is set to true, the view gets its drawable state
             (focused, pressed, etc.) from its direct parent rather than from itself.
        
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int duplicateParentState=0x7f01003c;
        /**  Defines whether to fade out scrollbars when they are not in use. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int fadeScrollbars=0x7f010024;
        /** 
             This attribute is deprecated and will be ignored as of
             API level 14 ({@link android.os.Build.VERSION_CODES#ICE_CREAM_SANDWICH}).
             Using fading edges may introduce noticeable performance
             degradations and should be used only when required by the application's
             visual design. To request fading edges with API level 14 and above,
             use the <code>android:requiresFadingEdge</code> attribute instead.
        
         <p>Must be one or more (separated by '|') of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>none</code></td><td>0x00000000</td><td> No edge is faded. </td></tr>
<tr><td><code>horizontal</code></td><td>0x00001000</td><td> Fades horizontal edges only. </td></tr>
<tr><td><code>vertical</code></td><td>0x00002000</td><td> Fades vertical edges only. </td></tr>
</table>
         */
        public static final int fadingEdge=0x7f01002e;
        /**  Defines the length of the fading edges. 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int fadingEdgeLength=0x7f010030;
        /** 
             When set to true, the list will always show the fast scroll interface.
             This setting implies fastScrollEnabled.
        
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int fastScrollAlwaysVisible=0x7f010069;
        /** 
             Enables the fast scroll thumb that can be dragged to quickly scroll through
             the list.
        
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int fastScrollEnabled=0x7f010066;
        /** 
             Specifies whether to filter touches when the view's window is obscured by
             another visible window.  When set to true, the view will not receive touches
             whenever a toast, dialog or other window appears above the view's window.
             Refer to the {@link android.view.View} security documentation for more details.
        
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int filterTouchesWhenObscured=0x7f010039;
        /** 
             Boolean internal attribute to adjust view layout based on
             system windows such as the status bar.
             If true, adjusts the padding of this view to leave space for the system windows.
             Will only take effect if this view is in a non-embedded activity.
        
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int fitsSystemWindows=0x7f010020;
        /**  Sets the padding, in pixels, of the start edge; see {@link android.R.attr#padding}. 
 <attr name="paddingStart" format="dimension" /> 
 Sets the padding, in pixels, of the end edge; see {@link android.R.attr#padding}. 
 <attr name="paddingEnd" format="dimension" /> 

             Boolean that controls whether a view can take focus.  By default the user can not
             move focus to a view; by setting this attribute to true the view is
             allowed to take focus.  This value does not impact the behavior of
             directly calling {@link android.view.View#requestFocus}, which will
             always request focus regardless of this view.  It only impacts where
             focus navigation will try to move focus.
        
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int focusable=0x7f01001d;
        /** 
             Boolean that controls whether a view can take focus while in touch mode.
             If this is true for a view, that view can gain focus when clicked on, and can keep
             focus if another view is clicked on that doesn't have this attribute set to true.
        
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int focusableInTouchMode=0x7f01001e;
        /** 
             When set to false, the ListView will not draw the divider before each footer view.
             The default value is true.
        
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int footerDividersEnabled=0x7f01006c;
        /** 
             Boolean that controls whether a view should have haptic feedback
             enabled for events such as long presses.
        
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int hapticFeedbackEnabled=0x7f010040;
        /** <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int header=0x7f010002;
        /** 
             When set to false, the ListView will not draw the divider after each header view.
             The default value is true.
        
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int headerDividersEnabled=0x7f01006b;
        /** <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int headerHeight=0x7f010003;
        /** <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int headerVisibleHeight=0x7f010004;
        /** 
             Supply an identifier name for this view, to later retrieve it
             with {@link android.view.View#findViewById View.findViewById()} or
             {@link android.app.Activity#findViewById Activity.findViewById()}.
             This must be a
             resource reference; typically you set this using the
             <code>@+</code> syntax to create a new ID resources.
             For example: <code>android:id="@+id/my_id"</code> which
             allows you to later retrieve the view
             with <code>findViewById(R.id.my_id)</code>.
        
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int id=0x7f010014;
        /** 
             Controls how this View is important for accessibility which is if it fires
             accessibility events and if it is reported to accessibility services that
             query the screen. Note: While not recommended, an accessibility service may
             decide to ignore this attribute and operate on all views in the view tree.
        
         <p>May be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
<p>May be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>auto</code></td><td>0</td><td>
                 The system determines whether the view is important for accessibility - default
                 (recommended).
            </td></tr>
<tr><td><code>yes</code></td><td>1</td><td> The view is important for accessibility. </td></tr>
<tr><td><code>no</code></td><td>2</td><td> The view is not important for accessibility. </td></tr>
</table>
         */
        public static final int importantForAccessibility=0x7f010053;
        /** 
             Set this if the view will serve as a scrolling container, meaing
             that it can be resized to shrink its overall window so that there
             will be space for an input method.  If not set, the default
             value will be true if "scrollbars" has the vertical scrollbar
             set, else it will be false.
        
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int isScrollContainer=0x7f010023;
        /** 
             Controls whether the view's window should keep the screen on
             while visible.
        
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int keepScreenOn=0x7f01003b;
        /** 
             Specifies the type of layer backing this view. The default value is none.
             Refer to {@link android.view.View#setLayerType(int, android.graphics.Paint)}
             for more information.
        
         <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>none</code></td><td>0</td><td> Don't use a layer. </td></tr>
<tr><td><code>software</code></td><td>1</td><td>
                 Use a software layer. Refer to
                 {@link android.view.View#setLayerType(int, android.graphics.Paint) for
                 more information.
            </td></tr>
<tr><td><code>hardware</code></td><td>2</td><td>
                 Use a hardware layer. Refer to
                 {@link android.view.View#setLayerType(int, android.graphics.Paint) for
                 more information.
            </td></tr>
</table>
         */
        public static final int layerType=0x7f01004f;
        /** 
             Defines the layout animation to use the first time the ViewGroup is laid out.
             Layout animations can also be started manually after the first layout.
        
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int layoutAnimation=0x7f010058;
        /** 
             Defines the direction of layout drawing. This typically is associated with writing
             direction of the language script used. The possible values are "ltr" for Left-to-Right,
             "rtl" for Right-to-Left, "locale" and "inherit" from parent view. If there is nothing
             to inherit, "locale" is used. "locale" falls back to "en-US". "ltr" is the direction
             used in "en-US". The default for this attribute is "inherit".
        
         <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>ltr</code></td><td>0</td><td> Left-to-Right </td></tr>
<tr><td><code>rtl</code></td><td>1</td><td> Right-to-Left </td></tr>
<tr><td><code>inherit</code></td><td>2</td><td> Inherit from parent </td></tr>
<tr><td><code>locale</code></td><td>3</td><td> Locale </td></tr>
</table>
         */
        public static final int layoutDirection=0x7f010050;
        /**  Drawable used to indicate the currently selected item in the list. 
         <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
         */
        public static final int listSelector=0x7f01005f;
        /** <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int listViewStyle=0x7f01000f;
        /**  Defines whether this view reacts to long click events. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int longClickable=0x7f010037;
        /** 
             Defines the minimum height of the view. It is not guaranteed
             the view will be able to achieve this minimum height (for example,
             if its parent layout constrains it with less available height).
        
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int minHeight=0x7f01003d;
        /** 
             Defines the minimum width of the view. It is not guaranteed
             the view will be able to achieve this minimum width (for example,
             if its parent layout constrains it with less available width).
        
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int minWidth=0x7f01003e;
        /** 
             Defines the next view to give focus to when the next focus is
             {@link android.view.View#FOCUS_DOWN}

             If the reference refers to a view that does not exist or is part
             of a hierarchy that is invisible, a {@link java.lang.RuntimeException}
             will result when the reference is accessed.
        
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int nextFocusDown=0x7f010034;
        /** 
             Defines the next view to give focus to when the next focus is
             {@link android.view.View#FOCUS_FORWARD}

             If the reference refers to a view that does not exist or is part
             of a hierarchy that is invisible, a {@link java.lang.RuntimeException}
             will result when the reference is accessed.
        
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int nextFocusForward=0x7f010035;
        /** 
             Defines the next view to give focus to when the next focus is
             {@link android.view.View#FOCUS_LEFT}.

             If the reference refers to a view that does not exist or is part
             of a hierarchy that is invisible, a {@link java.lang.RuntimeException}
             will result when the reference is accessed.
        
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int nextFocusLeft=0x7f010031;
        /** 
             Defines the next view to give focus to when the next focus is
             {@link android.view.View#FOCUS_RIGHT}

             If the reference refers to a view that does not exist or is part
             of a hierarchy that is invisible, a {@link java.lang.RuntimeException}
             will result when the reference is accessed.
        
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int nextFocusRight=0x7f010032;
        /** 
             Defines the next view to give focus to when the next focus is
             {@link android.view.View#FOCUS_UP}

             If the reference refers to a view that does not exist or is part
             of a hierarchy that is invisible, a {@link java.lang.RuntimeException}
             will result when the reference is accessed.
        
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int nextFocusUp=0x7f010033;
        /** 
             Name of the method in this View's context to invoke when the view is
             clicked. This name must correspond to a public method that takes
             exactly one parameter of type View. For instance, if you specify
             <code>android:onClick="sayHello"</code>, you must declare a
             <code>public void sayHello(View v)</code> method of your context
             (typically, your Activity).
        
         <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int onClick=0x7f010042;
        /**  Drawable to draw below list content. 
         <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
         */
        public static final int overScrollFooter=0x7f01006e;
        /**  Drawable to draw above list content. 
         <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
         */
        public static final int overScrollHeader=0x7f01006d;
        /** 
             Defines over-scrolling behavior. This property is used only if the
             View is scrollable. Over-scrolling is the ability for the user to
             receive feedback when attempting to scroll beyond meaningful content.
        
         <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>always</code></td><td>0</td><td>
                 Always show over-scroll effects, even if the content fits entirely
                 within the available space.
            </td></tr>
<tr><td><code>ifContentScrolls</code></td><td>1</td><td>
                 Only show over-scroll effects if the content is large
                 enough to meaningfully scroll.
            </td></tr>
<tr><td><code>never</code></td><td>2</td><td> Never show over-scroll effects. </td></tr>
</table>
         */
        public static final int overScrollMode=0x7f010043;
        /** 
             A drawable to use as the background.  This can be either a reference
             to a full drawable resource (such as a PNG image, 9-patch,
             XML state list description, etc), or a solid color such as "#ff000000"
            (black).
        
 <attr name="background" format="reference|color" /> 

             Sets the padding, in pixels, of all four edges.  Padding is defined as
             space between the edges of the view and the view's content. A views size
             will include it's padding.  If a {@link android.R.attr#background}
             is provided, the padding will initially be set to that (0 if the
             drawable does not have padding).  Explicitly setting a padding value
             will override the corresponding padding found in the background.
        
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int padding=0x7f010018;
        /**  Sets the padding, in pixels, of the bottom edge; see {@link android.R.attr#padding}. 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int paddingBottom=0x7f01001c;
        /**  Sets the padding, in pixels, of the left edge; see {@link android.R.attr#padding}. 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int paddingLeft=0x7f010019;
        /**  Sets the padding, in pixels, of the right edge; see {@link android.R.attr#padding}. 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int paddingRight=0x7f01001b;
        /**  Sets the padding, in pixels, of the top edge; see {@link android.R.attr#padding}. 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int paddingTop=0x7f01001a;
        /** 
             Defines the persistence of the drawing cache. The drawing cache might be
             enabled by a ViewGroup for all its children in specific situations (for
             instance during a scrolling.) This property lets you persist the cache
             in memory after its initial usage. Persisting the cache consumes more
             memory but may prevent frequent garbage collection is the cache is created
             over and over again. By default the persistence is set to scrolling.
        
         <p>Must be one or more (separated by '|') of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>none</code></td><td>0x0</td><td> The drawing cache is not persisted after use. </td></tr>
<tr><td><code>animation</code></td><td>0x1</td><td> The drawing cache is persisted after a layout animation. </td></tr>
<tr><td><code>scrolling</code></td><td>0x2</td><td> The drawing cache is persisted after a scroll. </td></tr>
<tr><td><code>all</code></td><td>0x3</td><td> The drawing cache is always persisted. </td></tr>
</table>
         */
        public static final int persistentDrawingCache=0x7f01005a;
        /** <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int plaColumnNumber=0x7f010010;
        /** <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int plaColumnPaddingLeft=0x7f010012;
        /** <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int plaColumnPaddingRight=0x7f010013;
        /** <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int plaLandscapeColumnNumber=0x7f010011;
        /** <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int ptr_content=0x7f010006;
        /** <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int ptr_duration_to_close=0x7f010009;
        /** <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int ptr_duration_to_close_header=0x7f01000a;
        /**  Optional. If you put header and content in xml, you can you these to specify them. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int ptr_header=0x7f010005;
        /**  keep header when refreshing
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int ptr_keep_header_when_refresh=0x7f01000c;
        /**  pull to refresh, otherwise release to refresh, default is release to refresh 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int ptr_pull_to_fresh=0x7f01000b;
        /**  the ration of the height of the header to trigger refresh 
         <p>Must be a floating point value, such as "<code>1.2</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int ptr_ratio_of_header_height_to_refresh=0x7f010008;
        /**  the resistance when you are moving the frame 
         <p>Must be a floating point value, such as "<code>1.2</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int ptr_resistance=0x7f010007;
        /** <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int ptr_rotate_ani_time=0x7f01000d;
        /**  Defines which edges should be faded on scrolling. 
         <p>Must be one or more (separated by '|') of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>none</code></td><td>0x00000000</td><td> No edge is faded. </td></tr>
<tr><td><code>horizontal</code></td><td>0x00001000</td><td> Fades horizontal edges only. </td></tr>
<tr><td><code>vertical</code></td><td>0x00002000</td><td> Fades vertical edges only. </td></tr>
</table>
         */
        public static final int requiresFadingEdge=0x7f01002f;
        /**  rotation of the view, in degrees. 
         <p>Must be a floating point value, such as "<code>1.2</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int rotation=0x7f010049;
        /**  rotation of the view around the x axis, in degrees. 
         <p>Must be a floating point value, such as "<code>1.2</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int rotationX=0x7f01004a;
        /**  rotation of the view around the y axis, in degrees. 
         <p>Must be a floating point value, such as "<code>1.2</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int rotationY=0x7f01004b;
        /** <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int roundHeightimg=0x7f010070;
        /** <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int roundWidthimg=0x7f01006f;
        /** 
             If unset, no state will be saved for this view when it is being
             frozen. The default is true, allowing the view to be saved
             (however it also must have an ID assigned to it for its
             state to be saved).  Setting this to false only disables the
             state for this view, not for its children which may still
             be saved.
        
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int saveEnabled=0x7f010038;
        /**  scale of the view in the x direction. 
         <p>Must be a floating point value, such as "<code>1.2</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int scaleX=0x7f01004c;
        /**  scale of the view in the y direction. 
         <p>Must be a floating point value, such as "<code>1.2</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int scaleY=0x7f01004d;
        /**  The initial horizontal scroll offset, in pixels. 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int scrollX=0x7f010016;
        /**  The initial vertical scroll offset, in pixels. 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int scrollY=0x7f010017;
        /**  Defines whether the horizontal scrollbar track should always be drawn. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int scrollbarAlwaysDrawHorizontalTrack=0x7f01002c;
        /**  Defines whether the vertical scrollbar track should always be drawn. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int scrollbarAlwaysDrawVerticalTrack=0x7f01002d;
        /**  Defines the delay in milliseconds that a scrollbar waits before fade out. 
         <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int scrollbarDefaultDelayBeforeFade=0x7f010026;
        /**  Defines the delay in milliseconds that a scrollbar takes to fade out. 
         <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int scrollbarFadeDuration=0x7f010025;
        /**  Sets the width of vertical scrollbars and height of horizontal scrollbars. 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int scrollbarSize=0x7f010027;
        /** 
             Controls the scrollbar style and position. The scrollbars can be overlaid or
             inset. When inset, they add to the padding of the view. And the
             scrollbars can be drawn inside the padding area or on the edge of
             the view. For example, if a view has a background drawable and you
             want to draw the scrollbars inside the padding specified by the
             drawable, you can use insideOverlay or insideInset. If you want them
             to appear at the edge of the view, ignoring the padding, then you can
             use outsideOverlay or outsideInset.
        
         <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>insideOverlay</code></td><td>0x0</td><td> Inside the padding and overlaid </td></tr>
<tr><td><code>insideInset</code></td><td>0x01000000</td><td> Inside the padding and inset </td></tr>
<tr><td><code>outsideOverlay</code></td><td>0x02000000</td><td> Edge of the view and overlaid </td></tr>
<tr><td><code>outsideInset</code></td><td>0x03000000</td><td> Edge of the view and inset </td></tr>
</table>
         */
        public static final int scrollbarStyle=0x7f010022;
        /**  Defines the horizontal scrollbar thumb drawable. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int scrollbarThumbHorizontal=0x7f010028;
        /**  Defines the vertical scrollbar thumb drawable. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int scrollbarThumbVertical=0x7f010029;
        /**  Defines the horizontal scrollbar track drawable. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int scrollbarTrackHorizontal=0x7f01002a;
        /**  Defines the vertical scrollbar track drawable. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int scrollbarTrackVertical=0x7f01002b;
        /**  Defines which scrollbars should be displayed on scrolling or not. 
         <p>Must be one or more (separated by '|') of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>none</code></td><td>0x00000000</td><td> No scrollbar is displayed. </td></tr>
<tr><td><code>horizontal</code></td><td>0x00000100</td><td> Displays horizontal scrollbar only. </td></tr>
<tr><td><code>vertical</code></td><td>0x00000200</td><td> Displays vertical scrollbar only. </td></tr>
</table>
         */
        public static final int scrollbars=0x7f010021;
        /** 
             When set to true, the list uses a drawing cache during scrolling.
             This makes the rendering faster but uses more memory. The default
             value is true.
        
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int scrollingCache=0x7f010062;
        /** <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>lay_down</code></td><td>0</td><td></td></tr>
<tr><td><code>pull_out</code></td><td>1</td><td></td></tr>
</table>
         */
        public static final int show_mode=0x7f010001;
        /** 
             When set to true, the list will use a more refined calculation
             method based on the pixels height of the items visible on screen. This
             property is set to true by default but should be set to false if your adapter
             will display items of varying heights. When this property is set to true and
             your adapter displays items of varying heights, the scrollbar thumb will
             change size as the user scrolls through the list. When set to fale, the list
             will use only the number of items in the adapter and the number of items visible
             on screen to determine the scrollbar's properties.
        
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int smoothScrollbar=0x7f010067;
        /** 
             Boolean that controls whether a view should have sound effects
             enabled for events such as clicking and touching.
        
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int soundEffectsEnabled=0x7f01003f;
        /** 
             Sets whether this ViewGroup should split MotionEvents
             to separate child views during touch event dispatch.
             If false (default), touch events will be dispatched to
             the child view where the first pointer went down until
             the last pointer goes up.
             If true, touch events may be dispatched to multiple children.
             MotionEvents for each pointer will be dispatched to the child
             view where the initial ACTION_DOWN event happened.
             See {@link android.view.ViewGroup#setMotionEventSplittingEnabled(boolean)}
             for more information.
        
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int splitMotionEvents=0x7f01005e;
        /**  Used by ListView and GridView to stack their content from the bottom. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int stackFromBottom=0x7f010061;
        /** 
             Supply a tag for this view containing a String, to be retrieved
             later with {@link android.view.View#getTag View.getTag()} or
             searched for with {@link android.view.View#findViewWithTag
             View.findViewWithTag()}.  It is generally preferable to use
             IDs (through the android:id attribute) instead of tags because
             they are faster and allow for compile-time type checking.
        
         <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int tag=0x7f010015;
        /** 
             Alignment of the text. A heuristic is used to determine the resolved
            text alignment.
        
         <p>May be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
<p>May be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>inherit</code></td><td>0</td><td> Default </td></tr>
<tr><td><code>gravity</code></td><td>1</td><td>
                 Default for the root view. The gravity determines the alignment, ALIGN_NORMAL,
                ALIGN_CENTER, or ALIGN_OPPOSITE, which are relative to each paragraph’s
                text direction
            </td></tr>
<tr><td><code>textStart</code></td><td>2</td><td> Align to the start of the paragraph, e.g. ALIGN_NORMAL. </td></tr>
<tr><td><code>textEnd</code></td><td>3</td><td> Align to the end of the paragraph, e.g. ALIGN_OPPOSITE. </td></tr>
<tr><td><code>center</code></td><td>4</td><td> Center the paragraph, e.g. ALIGN_CENTER. </td></tr>
<tr><td><code>viewStart</code></td><td>5</td><td>
                 Align to the start of the view, which is ALIGN_LEFT if the view’s resolved
                layoutDirection is LTR, and ALIGN_RIGHT otherwise.
            </td></tr>
<tr><td><code>viewEnd</code></td><td>6</td><td>
                 Align to the end of the view, which is ALIGN_RIGHT if the view’s resolved
                layoutDirection is LTR, and ALIGN_LEFT otherwise
            </td></tr>
</table>
         */
        public static final int textAlignment=0x7f010052;
        /** 
             Direction of the text. A heuristic is used to determine the resolved text direction
             of paragraphs.
        
         <p>May be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
<p>May be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>inherit</code></td><td>0</td><td> Default </td></tr>
<tr><td><code>firstStrong</code></td><td>1</td><td>
                 Default for the root view. The first strong directional character determines the
                 paragraph direction.  If there is no strong directional character, the paragraph
                 direction is the view’s resolved layout direction.
            </td></tr>
<tr><td><code>anyRtl</code></td><td>2</td><td>
                 The paragraph direction is RTL if it contains any strong RTL character, otherwise
                 it is LTR if it contains any strong LTR characters.  If there are neither, the
                 paragraph direction is the view’s resolved layout direction.
            </td></tr>
<tr><td><code>ltr</code></td><td>3</td><td> The paragraph direction is left to right. </td></tr>
<tr><td><code>rtl</code></td><td>4</td><td> The paragraph direction is right to left. </td></tr>
<tr><td><code>locale</code></td><td>5</td><td> The paragraph direction is coming from the system Locale. </td></tr>
</table>
         */
        public static final int textDirection=0x7f010051;
        /** 
             When set to true, the list will filter results as the user types. The
             List's adapter must support the Filterable interface for this to work.
        
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int textFilterEnabled=0x7f010063;
        /** 
             Sets the transcript mode for the list. In transcript mode, the list
             scrolls to the bottom to make new items visible when they are added.
        
         <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>disabled</code></td><td>0</td><td> Disables transcript mode. This is the default value. </td></tr>
<tr><td><code>normal</code></td><td>1</td><td>
                 The list will automatically scroll to the bottom when
                 a data set change notification is received and only if the last item is
                 already visible on screen.
            </td></tr>
<tr><td><code>alwaysScroll</code></td><td>2</td><td>
                 The list will automatically scroll to the bottom, no matter what items
                 are currently visible.
            </td></tr>
</table>
         */
        public static final int transcriptMode=0x7f010064;
        /** 
             x location of the pivot point around which the view will rotate and scale.
             This xml attribute sets the pivotX property of the View.
        
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int transformPivotX=0x7f010047;
        /** 
             y location of the pivot point around which the view will rotate and scale.
             This xml attribute sets the pivotY property of the View.
        
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int transformPivotY=0x7f010048;
        /** 
             translation in x of the view. This value is added post-layout to the left
             property of the view, which is set by its layout.
        
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int translationX=0x7f010045;
        /** 
             translation in y of the view. This value is added post-layout to the left
             property of the view, which is set by its layout.
        
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int translationY=0x7f010046;
        /**  Determines which side the vertical scroll bar should be placed on. 
         <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>defaultPosition</code></td><td>0</td><td> Place the scroll bar wherever the system default determines. </td></tr>
<tr><td><code>left</code></td><td>1</td><td> Place the scroll bar on the left. </td></tr>
<tr><td><code>right</code></td><td>2</td><td> Place the scroll bar on the right. </td></tr>
</table>
         */
        public static final int verticalScrollbarPosition=0x7f01004e;
        /**  Controls the initial visibility of the view. 
         <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>visible</code></td><td>0</td><td> Visible on screen; the default value. </td></tr>
<tr><td><code>invisible</code></td><td>1</td><td> Not displayed, but taken into account during layout (space is left for it). </td></tr>
<tr><td><code>gone</code></td><td>2</td><td> Completely hidden, as if the view had not been added. </td></tr>
</table>
         */
        public static final int visibility=0x7f01001f;
    }
    public static final class color {
        public static final int ampm_text_color=0x7f06000a;
        public static final int bg_color=0x7f06000e;
        public static final int bg_line=0x7f060015;
        public static final int black=0x7f06000f;
        public static final int blue=0x7f060005;
        public static final int btn_gray_normal=0x7f06001f;
        public static final int calendar_header=0x7f060008;
        public static final int circle_background=0x7f060001;
        public static final int city_nomal_color=0x7f06001b;
        public static final int city_select_color=0x7f06001a;
        public static final int color_d5=0x7f060010;
        public static final int common_bg=0x7f060020;
        public static final int darker_blue=0x7f060006;
        public static final int date_picker_selector=0x7f060025;
        public static final int date_picker_text_normal=0x7f060007;
        public static final int date_picker_view_animator=0x7f060009;
        public static final int date_picker_year_selector=0x7f060026;
        public static final int done_text_color=0x7f060027;
        public static final int done_text_color_disabled=0x7f060004;
        public static final int done_text_color_normal=0x7f060003;
        public static final int editTextClolor=0x7f060014;
        public static final int gray=0x7f060012;
        public static final int line_background=0x7f060002;
        public static final int numbers_text_color=0x7f06000b;
        public static final int pciture_blue=0x7f06001d;
        public static final int pciture_text=0x7f06001c;
        public static final int profile_bottom_text_color=0x7f060028;
        public static final int qq_bg_chat_bottom_color=0x7f060022;
        public static final int qq_bg_chat_color=0x7f060021;
        public static final int reg_desc_text=0x7f060019;
        public static final int self_comment_color=0x7f060013;
        /**  <color name="text_color_select">#F86442</color> 
         */
        public static final int text_color_nomal=0x7f06001e;
        public static final int text_desc=0x7f060011;
        public static final int titleBarBackGround=0x7f06000d;
        public static final int transparent_black=0x7f06000c;
        public static final int txt_color=0x7f060023;
        public static final int txt_desc_color=0x7f060024;
        public static final int unberlineview_bottomline=0x7f060017;
        public static final int unberlineview_dividingline=0x7f060016;
        public static final int unberlineview_text=0x7f060018;
        public static final int white=0x7f060000;
    }
    public static final class dimen {
        /**  Default screen margins, per the Android Design guidelines. 

         Example customization of dimensions originally defined in res/values/dimens.xml
         (such as screen margins) for screens with more than 820dp of available width. This
         would include 7" and 10" devices in landscape (~960dp and ~1280dp respectively).
    
         */
        public static final int activity_horizontal_margin=0x7f070020;
        public static final int activity_vertical_margin=0x7f070021;
        public static final int ampm_label_size=0x7f070013;
        public static final int ampm_left_padding=0x7f070014;
        public static final int call_button_padding_left=0x7f070039;
        public static final int call_button_padding_right=0x7f07003a;
        public static final int call_button_padding_vertical=0x7f070038;
        public static final int date_picker_component_width=0x7f070001;
        public static final int date_picker_header_height=0x7f070002;
        public static final int date_picker_header_text_size=0x7f07000c;
        public static final int date_picker_view_animator_height=0x7f070004;
        public static final int day_number_select_circle_radius=0x7f070007;
        public static final int day_number_size=0x7f07000e;
        public static final int dialog_height=0x7f07001a;
        public static final int done_label_size=0x7f070000;
        public static final int dp104=0x7f070022;
        public static final int dp26=0x7f070023;
        public static final int dp38=0x7f070028;
        public static final int dp48=0x7f07002d;
        public static final int dp54=0x7f070029;
        public static final int dp76=0x7f07002c;
        public static final int dp80=0x7f070026;
        public static final int dp94=0x7f07002b;
        public static final int dp98=0x7f070027;
        public static final int extra_time_label_margin=0x7f070012;
        public static final int field_margin_right=0x7f070037;
        public static final int field_textsize=0x7f070036;
        public static final int footer_height=0x7f07001e;
        public static final int header_height=0x7f070016;
        public static final int height_row_weixin=0x7f070033;
        /**  环信 
 //环信 
         */
        public static final int height_top_bar=0x7f070031;
        public static final int image_thumbnail_size=0x7f07003c;
        public static final int image_thumbnail_spacing=0x7f07003d;
        public static final int left_side_width=0x7f07001b;
        public static final int margin_chat_activity=0x7f070035;
        public static final int minimum_margin_sides=0x7f070018;
        public static final int minimum_margin_top_bottom=0x7f070019;
        public static final int month_day_label_text_size=0x7f070006;
        public static final int month_label_size=0x7f07000d;
        public static final int month_list_item_header_height=0x7f070005;
        public static final int month_list_item_padding=0x7f07001c;
        public static final int month_list_item_size=0x7f07001d;
        public static final int month_select_circle_radius=0x7f070008;
        public static final int padding_search_bar=0x7f070032;
        public static final int picker_dimen=0x7f070017;
        public static final int scale28dip=0x7f070030;
        public static final int scale40dip=0x7f070025;
        public static final int scale42sp=0x7f070024;
        public static final int selected_calendar_layout_height=0x7f070003;
        public static final int selected_date_day_size=0x7f07000a;
        public static final int selected_date_month_size=0x7f07000b;
        public static final int selected_date_year_size=0x7f070009;
        public static final int separator_padding=0x7f070015;
        public static final int sidebar_text_size=0x7f07003b;
        public static final int size_avatar=0x7f070034;
        public static final int sp_30=0x7f07002f;
        public static final int sp_40=0x7f07002a;
        public static final int sp_48=0x7f07002e;
        public static final int time_label_right_padding=0x7f07001f;
        public static final int time_label_size=0x7f070011;
        public static final int year_label_height=0x7f07000f;
        public static final int year_label_text_size=0x7f070010;
    }
    public static final class drawable {
        public static final int action_save=0x7f020000;
        public static final int add_pic=0x7f020001;
        public static final int app_logo=0x7f020002;
        public static final int app_panel_video_icon=0x7f020003;
        public static final int arrow_right=0x7f020004;
        public static final int bg_reg_header_stroke=0x7f020005;
        public static final int bg_unlogin_bar=0x7f020006;
        public static final int btn_bg=0x7f020007;
        public static final int btn_bottombar=0x7f020008;
        public static final int btn_bottombar_disable=0x7f020009;
        public static final int btn_bottombar_normal=0x7f02000a;
        public static final int btn_bottombar_press=0x7f02000b;
        public static final int btn_cancle_bgh=0x7f02000c;
        public static final int btn_disenable_bg=0x7f02000d;
        public static final int btn_select_bg=0x7f02000e;
        public static final int btn_selector=0x7f02000f;
        public static final int chat_file_normal=0x7f020010;
        public static final int chat_gridview_item=0x7f020011;
        public static final int chat_image_normal=0x7f020012;
        public static final int chat_item_file=0x7f020013;
        public static final int chat_location_noraml=0x7f020014;
        public static final int chat_press_speak_btn=0x7f020015;
        public static final int chat_takepic_normal=0x7f020016;
        public static final int chat_video_call_receive=0x7f020017;
        public static final int chat_video_call_self=0x7f020018;
        public static final int chat_video_mask_to=0x7f020019;
        public static final int chat_voice_call_receive=0x7f02001a;
        public static final int chat_voice_call_self=0x7f02001b;
        public static final int chatfrom_bg=0x7f02001c;
        public static final int chatfrom_bg_focused=0x7f02001d;
        public static final int chatfrom_bg_normal=0x7f02001e;
        public static final int chatfrom_voice_playing=0x7f02001f;
        public static final int chatfrom_voice_playing_f1=0x7f020020;
        public static final int chatfrom_voice_playing_f2=0x7f020021;
        public static final int chatfrom_voice_playing_f3=0x7f020022;
        public static final int chatting_biaoqing_btn_enable=0x7f020023;
        public static final int chatting_biaoqing_btn_normal=0x7f020024;
        public static final int chatting_setmode_keyboard_btn=0x7f020025;
        public static final int chatting_setmode_keyboard_btn_normal=0x7f020026;
        public static final int chatting_setmode_keyboard_btn_pressed=0x7f020027;
        public static final int chatting_setmode_voice_btn=0x7f020028;
        public static final int chatting_setmode_voice_btn_normal=0x7f020029;
        public static final int chatting_setmode_voice_btn_pressed=0x7f02002a;
        public static final int chatto_bg=0x7f02002b;
        public static final int chatto_bg_focused=0x7f02002c;
        public static final int chatto_bg_normal=0x7f02002d;
        public static final int chatto_voice_playing=0x7f02002e;
        public static final int chatto_voice_playing_f1=0x7f02002f;
        public static final int chatto_voice_playing_f2=0x7f020030;
        public static final int chatto_voice_playing_f3=0x7f020031;
        public static final int circle_item_bg=0x7f020032;
        public static final int comment_edit=0x7f020033;
        public static final int common_tab_bg=0x7f020034;
        public static final int default_avatar=0x7f020035;
        public static final int del=0x7f020036;
        public static final int delete_expression=0x7f020037;
        public static final int ee_1=0x7f020038;
        public static final int ee_10=0x7f020039;
        public static final int ee_11=0x7f02003a;
        public static final int ee_12=0x7f02003b;
        public static final int ee_13=0x7f02003c;
        public static final int ee_14=0x7f02003d;
        public static final int ee_15=0x7f02003e;
        public static final int ee_16=0x7f02003f;
        public static final int ee_17=0x7f020040;
        public static final int ee_18=0x7f020041;
        public static final int ee_19=0x7f020042;
        public static final int ee_2=0x7f020043;
        public static final int ee_20=0x7f020044;
        public static final int ee_21=0x7f020045;
        public static final int ee_22=0x7f020046;
        public static final int ee_23=0x7f020047;
        public static final int ee_24=0x7f020048;
        public static final int ee_25=0x7f020049;
        public static final int ee_26=0x7f02004a;
        public static final int ee_27=0x7f02004b;
        public static final int ee_28=0x7f02004c;
        public static final int ee_29=0x7f02004d;
        public static final int ee_3=0x7f02004e;
        public static final int ee_30=0x7f02004f;
        public static final int ee_31=0x7f020050;
        public static final int ee_32=0x7f020051;
        public static final int ee_33=0x7f020052;
        public static final int ee_34=0x7f020053;
        public static final int ee_35=0x7f020054;
        public static final int ee_36=0x7f020055;
        public static final int ee_37=0x7f020056;
        public static final int ee_38=0x7f020057;
        public static final int ee_39=0x7f020058;
        public static final int ee_4=0x7f020059;
        public static final int ee_40=0x7f02005a;
        public static final int ee_41=0x7f02005b;
        public static final int ee_42=0x7f02005c;
        public static final int ee_43=0x7f02005d;
        public static final int ee_44=0x7f02005e;
        public static final int ee_45=0x7f02005f;
        public static final int ee_46=0x7f020060;
        public static final int ee_47=0x7f020061;
        public static final int ee_48=0x7f020062;
        public static final int ee_49=0x7f020063;
        public static final int ee_5=0x7f020064;
        public static final int ee_50=0x7f020065;
        public static final int ee_51=0x7f020066;
        public static final int ee_52=0x7f020067;
        public static final int ee_6=0x7f020068;
        public static final int ee_7=0x7f020069;
        public static final int ee_8=0x7f02006a;
        public static final int ee_9=0x7f02006b;
        public static final int emoji_ck_bg=0x7f02006c;
        public static final int emoji_del=0x7f02006d;
        public static final int emoji_selector=0x7f02006e;
        public static final int fynn_prompt_dialog_bg_normal=0x7f02006f;
        public static final int fynn_prompt_dialog_btn_center_normal=0x7f020070;
        public static final int fynn_prompt_dialog_btn_center_pressed=0x7f020071;
        public static final int fynn_prompt_dialog_btn_center_selector=0x7f020072;
        public static final int fynn_prompt_dialog_btn_left_normal=0x7f020073;
        public static final int fynn_prompt_dialog_btn_left_pressed=0x7f020074;
        public static final int fynn_prompt_dialog_btn_left_selector=0x7f020075;
        public static final int fynn_prompt_dialog_btn_right_normal=0x7f020076;
        public static final int fynn_prompt_dialog_btn_right_pressed=0x7f020077;
        public static final int fynn_prompt_dialog_btn_right_selector=0x7f020078;
        public static final int fynn_prompt_dialog_btn_single_normal=0x7f020079;
        public static final int fynn_prompt_dialog_btn_single_pressed=0x7f02007a;
        public static final int fynn_prompt_dialog_btn_single_selector=0x7f02007b;
        public static final int fynn_prompt_dialog_title_bar_bg_skyblue=0x7f02007c;
        public static final int gridview_item_bg=0x7f02007d;
        public static final int iamge_progress=0x7f02007e;
        public static final int ic_camra=0x7f02007f;
        public static final int ic_launcher=0x7f020080;
        public static final int ic_loading=0x7f020081;
        public static final int icon_back=0x7f020082;
        public static final int icon_create_scene=0x7f020083;
        public static final int icon_delete=0x7f020084;
        public static final int icon_marka=0x7f020085;
        public static final int icon_sel=0x7f020086;
        public static final int icon_sel_off=0x7f020087;
        public static final int img_loder=0x7f020088;
        public static final int img_qq_friend=0x7f020089;
        public static final int img_qq_zone=0x7f02008a;
        public static final int img_weixin_friend=0x7f02008b;
        public static final int img_weixin_pengyouquan=0x7f02008c;
        public static final int input_new=0x7f02008d;
        public static final int item_bg=0x7f02008e;
        public static final int list_item_bg=0x7f02008f;
        public static final int location_msg=0x7f020090;
        public static final int message_icon=0x7f020091;
        public static final int mm_listitem=0x7f020092;
        public static final int mm_listitem_disable=0x7f020093;
        public static final int mm_listitem_grey=0x7f020094;
        public static final int mm_listitem_grey_normal=0x7f020095;
        public static final int mm_listitem_pressed=0x7f020096;
        public static final int mm_listitem_simple=0x7f020097;
        public static final int msg_state_fail_resend=0x7f020098;
        public static final int msg_state_fail_resend_pressed=0x7f020099;
        public static final int msg_state_failed_resend=0x7f02009a;
        public static final int news_item_bg=0x7f02009b;
        public static final int picture_cut_button_normal=0x7f02009c;
        public static final int picture_default_head=0x7f02009d;
        public static final int popwindow_bg=0x7f02009e;
        public static final int prompt=0x7f02009f;
        public static final int ptr_rotate_arrow=0x7f0200a0;
        public static final int record_animate_01=0x7f0200a1;
        public static final int record_animate_02=0x7f0200a2;
        public static final int record_animate_03=0x7f0200a3;
        public static final int record_animate_04=0x7f0200a4;
        public static final int record_animate_05=0x7f0200a5;
        public static final int record_animate_06=0x7f0200a6;
        public static final int record_animate_07=0x7f0200a7;
        public static final int record_animate_08=0x7f0200a8;
        public static final int record_animate_09=0x7f0200a9;
        public static final int record_animate_10=0x7f0200aa;
        public static final int record_animate_11=0x7f0200ab;
        public static final int record_animate_12=0x7f0200ac;
        public static final int record_animate_13=0x7f0200ad;
        public static final int record_animate_14=0x7f0200ae;
        public static final int recording_hint_bg=0x7f0200af;
        public static final int recording_text_hint_bg=0x7f0200b0;
        public static final int red_circle=0x7f0200b1;
        public static final int room_rating_bar=0x7f0200b2;
        public static final int select_pic_pop_btn_calcel_select_bg=0x7f0200b3;
        public static final int select_pic_pop_btn_cancel_selector=0x7f0200b4;
        public static final int select_pic_pop_menu_bg=0x7f0200b5;
        public static final int select_pic_pop_menu_btn_bg_selector=0x7f0200b6;
        public static final int send_voice_1=0x7f0200b7;
        public static final int send_voice_2=0x7f0200b8;
        public static final int send_voice_3=0x7f0200b9;
        public static final int slidetab_bg_press=0x7f0200ba;
        public static final int star_nomal=0x7f0200bb;
        public static final int star_select=0x7f0200bc;
        public static final int tab_bg=0x7f0200bd;
        public static final int trash=0x7f0200be;
        public static final int type_select_btn=0x7f0200bf;
        public static final int type_select_btn_nor=0x7f0200c0;
        public static final int type_select_btn_pressed=0x7f0200c1;
        public static final int video_download_btn_nor=0x7f0200c2;
        public static final int viewpager_dot_normal=0x7f0200c3;
        public static final int viewpager_dot_select=0x7f0200c4;
        public static final int viewpager_normal_circle=0x7f0200c5;
        public static final int viewpager_select_circle=0x7f0200c6;
        public static final int voice_unread=0x7f0200c7;
        public static final int xlistview_arrow=0x7f0200c8;
        public static final int zan_nomal=0x7f0200c9;
        public static final int zan_select=0x7f0200ca;
    }
    public static final class id {
        public static final int Layparent=0x7f0900cd;
        public static final int adre=0x7f09012f;
        public static final int afterDescendants=0x7f090034;
        public static final int all=0x7f090032;
        public static final int always=0x7f09001c;
        public static final int alwaysScroll=0x7f090038;
        public static final int ampm_hitspace=0x7f090125;
        public static final int ampm_label=0x7f090126;
        public static final int animation=0x7f090030;
        public static final int animator=0x7f090007;
        public static final int anyRtl=0x7f090027;
        public static final int auto=0x7f090019;
        public static final int avatar=0x7f0900f2;
        public static final int avatar_container=0x7f0900f1;
        public static final int back=0x7f090041;
        public static final int bar_bottom=0x7f090046;
        public static final int beforeDescendants=0x7f090033;
        public static final int blocksDescendants=0x7f090035;
        public static final int bmapView=0x7f090043;
        public static final int body=0x7f090090;
        public static final int bottom=0x7f09000c;
        public static final int btnComment=0x7f090070;
        public static final int btnDel=0x7f090074;
        public static final int btnFinish=0x7f09008f;
        public static final int btnNext=0x7f0900b6;
        public static final int btnSave=0x7f0900bd;
        public static final int btnUpload=0x7f0900e3;
        public static final int btn_add_guanzhu=0x7f09009e;
        public static final int btn_biyanzhi=0x7f090080;
        public static final int btn_boy=0x7f09013e;
        public static final int btn_cancel=0x7f090118;
        public static final int btn_divider1=0x7f0900c7;
        public static final int btn_divider2=0x7f0900c9;
        public static final int btn_exit=0x7f09008b;
        public static final int btn_fiish=0x7f0900ba;
        public static final int btn_findPasswrod=0x7f09007e;
        public static final int btn_get_code=0x7f0900b8;
        public static final int btn_girl=0x7f09013d;
        public static final int btn_info=0x7f090093;
        public static final int btn_location_send=0x7f090042;
        public static final int btn_login=0x7f09007d;
        public static final int btn_menu_1=0x7f090119;
        public static final int btn_menu_2=0x7f09011a;
        public static final int btn_more=0x7f09004f;
        public static final int btn_press_to_speak=0x7f09004a;
        public static final int btn_regisiter=0x7f09007f;
        public static final int btn_save=0x7f09009b;
        public static final int btn_send=0x7f090050;
        public static final int btn_send_message=0x7f09009d;
        public static final int btn_set_mode_keyboard=0x7f090049;
        public static final int btn_set_mode_voice=0x7f090048;
        public static final int btn_share=0x7f090067;
        public static final int btn_view=0x7f0900c5;
        public static final int btn_yanzhi=0x7f090094;
        public static final int btn_yanzhibang=0x7f090081;
        public static final int btnback=0x7f09008e;
        public static final int buttom=0x7f09006e;
        public static final int button_center=0x7f0900c8;
        public static final int button_left=0x7f0900c6;
        public static final int button_right=0x7f0900ca;
        public static final int card_list=0x7f0900d7;
        public static final int center=0x7f09002b;
        public static final int center_view=0x7f09011f;
        public static final int chatting_click_area=0x7f090108;
        public static final int chatting_content_iv=0x7f090109;
        public static final int chatting_length_iv=0x7f09010c;
        public static final int chatting_size_iv=0x7f09010b;
        public static final int chatting_status_btn=0x7f09010e;
        public static final int chatting_video_data_area=0x7f09010a;
        public static final int comment_listView=0x7f09006c;
        public static final int container_status_btn=0x7f09010d;
        public static final int date_picker_day=0x7f090005;
        public static final int date_picker_header=0x7f090001;
        public static final int date_picker_month=0x7f090004;
        public static final int date_picker_month_and_day=0x7f090003;
        public static final int date_picker_year=0x7f090006;
        public static final int day_picker_selected_date_layout=0x7f090002;
        public static final int defaultPosition=0x7f09001f;
        public static final int dialog=0x7f0900bf;
        public static final int dialog_view=0x7f0900db;
        public static final int disabled=0x7f090036;
        public static final int done=0x7f090000;
        public static final int done_button=0x7f090129;
        public static final int dot1=0x7f090054;
        public static final int dot2=0x7f090055;
        public static final int dot3=0x7f090056;
        public static final int edit_again_password=0x7f0900b9;
        public static final int edit_content=0x7f09006f;
        public static final int edit_password=0x7f09007c;
        public static final int edit_telephone=0x7f0900b5;
        public static final int edit_telphone=0x7f09007b;
        public static final int edit_user_name=0x7f0900ee;
        public static final int edit_verify_code=0x7f0900b7;
        public static final int edittext_layout=0x7f09004b;
        public static final int et_sendmessage=0x7f09004c;
        public static final int firstStrong=0x7f090026;
        public static final int gone=0x7f090011;
        public static final int gravity=0x7f090028;
        public static final int gridView1=0x7f0900a2;
        public static final int gridview=0x7f0900b4;
        public static final int hardware=0x7f090021;
        public static final int high=0x7f09001b;
        public static final int horizontal=0x7f090013;
        public static final int hour_space=0x7f090120;
        public static final int hours=0x7f090122;
        public static final int ifContentScrolls=0x7f09001d;
        public static final int image=0x7f090096;
        public static final int imageView=0x7f0900d4;
        public static final int imageView1=0x7f09003e;
        public static final int imagefactory_btn_left=0x7f090078;
        public static final int imagefactory_btn_right=0x7f090079;
        public static final int imagefactory_crop_civ_display=0x7f090076;
        public static final int imagefactory_layout_bottom=0x7f090077;
        public static final int img=0x7f090068;
        public static final int imgBack=0x7f0900cf;
        public static final int imgSave=0x7f0900d0;
        public static final int img_avatar=0x7f090062;
        public static final int img_avatar_bg=0x7f090086;
        public static final int img_create=0x7f090084;
        public static final int img_del=0x7f0900f0;
        public static final int img_icon=0x7f0900a3;
        public static final int img_prompt=0x7f090082;
        public static final int img_user_avatar=0x7f0900aa;
        public static final int indicator=0x7f090073;
        public static final int inherit=0x7f090024;
        public static final int insideInset=0x7f090016;
        public static final int insideOverlay=0x7f090015;
        public static final int invisible=0x7f090010;
        public static final int iv_call_icon=0x7f09010f;
        public static final int iv_emoticons_checked=0x7f09004e;
        public static final int iv_emoticons_normal=0x7f09004d;
        public static final int iv_expression=0x7f0900f7;
        public static final int iv_sendPicture=0x7f090104;
        public static final int iv_unread_voice=0x7f090112;
        public static final int iv_userhead=0x7f0900f9;
        public static final int iv_voice=0x7f090110;
        public static final int layBottom=0x7f0900bc;
        public static final int layTitle=0x7f0900ce;
        public static final int lay_down=0x7f09000d;
        public static final int laybg=0x7f09003c;
        public static final int layout1=0x7f090092;
        public static final int layout_about=0x7f09008a;
        public static final int layout_address=0x7f090133;
        public static final int layout_addview=0x7f0900c2;
        public static final int layout_bottom=0x7f09009c;
        public static final int layout_comment=0x7f09006a;
        public static final int layout_conent=0x7f0900a7;
        public static final int layout_content=0x7f09008d;
        public static final int layout_guanzhu=0x7f09012c;
        public static final int layout_message=0x7f090087;
        public static final int layout_nick_name=0x7f090131;
        public static final int layout_parent=0x7f0900a6;
        public static final int layout_qq_haoyou=0x7f09011b;
        public static final int layout_qq_kongjian=0x7f09011c;
        public static final int layout_scroll=0x7f090060;
        public static final int layout_title=0x7f09005e;
        public static final int layout_version=0x7f090089;
        public static final int layout_weixin_haoyou=0x7f09011d;
        public static final int layout_weixin_pengyouquan=0x7f09011e;
        public static final int left=0x7f090009;
        public static final int like=0x7f0900d9;
        public static final int line=0x7f090095;
        public static final int line1=0x7f090061;
        public static final int line2=0x7f090065;
        public static final int line3=0x7f090130;
        public static final int line4=0x7f09012d;
        public static final int line_bottom=0x7f090091;
        public static final int linearLayout1=0x7f09007a;
        public static final int list=0x7f09005a;
        public static final int listView=0x7f0900bb;
        public static final int listView1=0x7f090072;
        public static final int listView_city=0x7f0900a9;
        public static final int listView_province=0x7f0900a8;
        public static final int list_item_layout=0x7f0900ef;
        public static final int ll_btn_container=0x7f090057;
        public static final int ll_click_area=0x7f090107;
        public static final int ll_face_container=0x7f090052;
        public static final int ll_file_container=0x7f0900fa;
        public static final int ll_loading=0x7f090105;
        public static final int ll_location=0x7f090116;
        public static final int loading=0x7f0900cc;
        public static final int loading_layout=0x7f090098;
        public static final int locale=0x7f090025;
        public static final int low=0x7f09001a;
        public static final int ltr=0x7f090022;
        public static final int m_gridview=0x7f090058;
        public static final int main_layout=0x7f090083;
        public static final int message=0x7f0900c3;
        public static final int mic_image=0x7f09005c;
        public static final int minutes=0x7f090124;
        public static final int minutes_space=0x7f090123;
        public static final int month_text_view=0x7f090008;
        public static final int more=0x7f090051;
        public static final int msg_btn_divider=0x7f0900c4;
        public static final int msg_state=0x7f0900f6;
        public static final int msg_status=0x7f090113;
        public static final int multipleChoice=0x7f09003a;
        public static final int multipleChoiceModal=0x7f09003b;
        public static final int name=0x7f0900f4;
        public static final int never=0x7f09001e;
        public static final int news_list=0x7f0900d1;
        public static final int news_pic=0x7f0900d2;
        public static final int news_title=0x7f0900d3;
        public static final int no=0x7f09002f;
        public static final int none=0x7f090012;
        public static final int normal=0x7f090037;
        public static final int outsideInset=0x7f090018;
        public static final int outsideOverlay=0x7f090017;
        public static final int pager=0x7f090075;
        public static final int parent=0x7f0900ac;
        public static final int pb_load_local=0x7f090097;
        public static final int pb_load_more=0x7f090059;
        public static final int pb_sending=0x7f0900fc;
        public static final int percentage=0x7f090106;
        public static final int progressBar=0x7f090099;
        public static final int ptr_classic_header_rotate_view=0x7f0900b2;
        public static final int ptr_classic_header_rotate_view_header_last_update=0x7f0900b1;
        public static final int ptr_classic_header_rotate_view_header_text=0x7f0900af;
        public static final int ptr_classic_header_rotate_view_header_title=0x7f0900b0;
        public static final int ptr_classic_header_rotate_view_progressbar=0x7f0900b3;
        public static final int ptr_id_header=0x7f0900dd;
        public static final int ptr_id_image=0x7f0900de;
        public static final int ptr_id_last_updated=0x7f0900e2;
        public static final int ptr_id_spinner=0x7f0900df;
        public static final int ptr_id_text=0x7f0900e1;
        public static final int ptr_id_textwrapper=0x7f0900e0;
        public static final int pull_out=0x7f09000e;
        public static final int pulldown_footer_loading=0x7f0900e4;
        public static final int pulldown_footer_text=0x7f0900e5;
        public static final int ratingbar=0x7f090066;
        public static final int recording_container=0x7f09005b;
        public static final int recording_hint=0x7f09005d;
        public static final int reg_layout_female=0x7f0900eb;
        public static final int reg_layout_male=0x7f0900e9;
        public static final int rg_layout_genderline=0x7f0900e8;
        public static final int rg_radiobutton_female=0x7f0900ec;
        public static final int rg_radiobutton_male=0x7f0900ea;
        public static final int right=0x7f09000a;
        public static final int rightImg=0x7f09012b;
        public static final int rl_bottom=0x7f090047;
        public static final int rl_picture=0x7f090117;
        public static final int root_layout=0x7f090044;
        public static final int rotate_header_grid_view_frame=0x7f0900a1;
        public static final int row_rec_location=0x7f090100;
        public static final int row_recv_pic=0x7f090103;
        public static final int rtl=0x7f090023;
        public static final int scrollView1=0x7f090085;
        public static final int scrolling=0x7f090031;
        public static final int selectImage=0x7f0900da;
        public static final int separator=0x7f090121;
        public static final int singleChoice=0x7f090039;
        public static final int software=0x7f090020;
        public static final int text=0x7f0900a5;
        public static final int textEnd=0x7f09002a;
        public static final int textStart=0x7f090029;
        public static final int textView=0x7f09009a;
        public static final int textView1=0x7f090040;
        public static final int textView2=0x7f090088;
        public static final int thumbnail=0x7f0900d8;
        public static final int time=0x7f0900f5;
        public static final int time_picker=0x7f090128;
        public static final int time_picker_dialog=0x7f090127;
        public static final int timestamp=0x7f0900f8;
        public static final int tipTextView=0x7f0900dc;
        public static final int title=0x7f09003d;
        public static final int title_layout=0x7f0900e6;
        public static final int title_msg_divider=0x7f0900c1;
        public static final int title_txt=0x7f09012a;
        public static final int titlebar=0x7f0900c0;
        public static final int top=0x7f09000b;
        public static final int top_bar=0x7f090045;
        public static final int tv_ack=0x7f090114;
        public static final int tv_chatcontent=0x7f090102;
        public static final int tv_delivered=0x7f090115;
        public static final int tv_file_name=0x7f0900fd;
        public static final int tv_file_size=0x7f0900fe;
        public static final int tv_file_state=0x7f0900ff;
        public static final int tv_length=0x7f090111;
        public static final int tv_location=0x7f090101;
        public static final int tv_userid=0x7f0900fb;
        public static final int txt_address=0x7f0900cb;
        public static final int txt_birthday=0x7f0900e7;
        public static final int txt_comment_content=0x7f0900ab;
        public static final int txt_content=0x7f090069;
        public static final int txt_del=0x7f0900ad;
        public static final int txt_gender=0x7f09012e;
        public static final int txt_guanzhu=0x7f0900a0;
        public static final int txt_info=0x7f0900d5;
        public static final int txt_name=0x7f09008c;
        public static final int txt_nick_name=0x7f090132;
        public static final int txt_num=0x7f0900d6;
        public static final int txt_num_show=0x7f0900be;
        public static final int txt_page=0x7f0900ed;
        public static final int txt_renqi=0x7f09009f;
        public static final int txt_reply=0x7f0900ae;
        public static final int txt_score=0x7f09005f;
        public static final int txt_time=0x7f090064;
        public static final int txt_title=0x7f0900a4;
        public static final int txt_user_name=0x7f090063;
        public static final int txt_version=0x7f09003f;
        public static final int unread_msg_number=0x7f0900f3;
        public static final int vPager=0x7f090053;
        public static final int vertical=0x7f090014;
        public static final int viewEnd=0x7f09002d;
        public static final int viewStart=0x7f09002c;
        public static final int view_bottom=0x7f09006d;
        public static final int view_top=0x7f09006b;
        public static final int viewflipper=0x7f090071;
        public static final int visible=0x7f09000f;
        public static final int xlistview_footer_content=0x7f090134;
        public static final int xlistview_footer_hint_textview=0x7f090136;
        public static final int xlistview_footer_progressbar=0x7f090135;
        public static final int xlistview_header_arrow=0x7f09013b;
        public static final int xlistview_header_content=0x7f090137;
        public static final int xlistview_header_hint_textview=0x7f090139;
        public static final int xlistview_header_progressbar=0x7f09013c;
        public static final int xlistview_header_text=0x7f090138;
        public static final int xlistview_header_time=0x7f09013a;
        public static final int yes=0x7f09002e;
    }
    public static final class layout {
        public static final int activity_about=0x7f030000;
        public static final int activity_baidumap=0x7f030001;
        public static final int activity_chat=0x7f030002;
        public static final int activity_chat_all_history=0x7f030003;
        public static final int activity_comment=0x7f030004;
        public static final int activity_find_password=0x7f030005;
        public static final int activity_guan_zhu=0x7f030006;
        public static final int activity_image_pager=0x7f030007;
        public static final int activity_imagefactory=0x7f030008;
        public static final int activity_login=0x7f030009;
        public static final int activity_main=0x7f03000a;
        public static final int activity_personal_center=0x7f03000b;
        public static final int activity_picture_server_comment=0x7f03000c;
        public static final int activity_selectphoto=0x7f03000d;
        public static final int activity_self_info=0x7f03000e;
        public static final int activity_show_big_image=0x7f03000f;
        public static final int activity_show_file=0x7f030010;
        public static final int activity_up_date_user_name=0x7f030011;
        public static final int activity_user_info=0x7f030012;
        public static final int activity_user_info1=0x7f030013;
        public static final int activity_welcome=0x7f030014;
        public static final int biyanzhi_layout=0x7f030015;
        public static final int boy_fragment_layout=0x7f030016;
        public static final int chat_gridview_item=0x7f030017;
        public static final int city_item=0x7f030018;
        public static final int city_list_layout=0x7f030019;
        public static final int comment_item=0x7f03001a;
        public static final int comment_popwindow=0x7f03001b;
        public static final int cube_ptr_classic_default_header=0x7f03001c;
        public static final int cube_ptr_simple_loading=0x7f03001d;
        public static final int date_picker_dialog=0x7f03001e;
        public static final int date_picker_done_button=0x7f03001f;
        public static final int date_picker_header_view=0x7f030020;
        public static final int date_picker_selected_date=0x7f030021;
        public static final int date_picker_view_animator=0x7f030022;
        public static final int expression_gridview=0x7f030023;
        public static final int find_password_input_phone=0x7f030024;
        public static final int find_password_input_verify_code=0x7f030025;
        public static final int find_password_set_password=0x7f030026;
        public static final int fragment_photofolder=0x7f030027;
        public static final int fragment_photoselect=0x7f030028;
        public static final int fynn_prompt_dialog_normal=0x7f030029;
        public static final int fynn_prompt_dialog_titlebar=0x7f03002a;
        public static final int fynn_prompt_dialog_titlebar_skyblue=0x7f03002b;
        public static final int girl_fragment_layout=0x7f03002c;
        public static final int grid_view_item_1=0x7f03002d;
        public static final int griview_item=0x7f03002e;
        public static final int guanzhu_listview_item=0x7f03002f;
        public static final int image_detail_fragment=0x7f030030;
        public static final int image_detail_pager=0x7f030031;
        public static final int infos_list=0x7f030032;
        public static final int item_photofolder=0x7f030033;
        public static final int item_sample=0x7f030034;
        public static final int item_selectphoto=0x7f030035;
        public static final int loading_dialog=0x7f030036;
        public static final int message_prompt=0x7f030037;
        public static final int ptr_header=0x7f030038;
        public static final int publish_picture_activity=0x7f030039;
        public static final int pulldown_footer=0x7f03003a;
        public static final int register_activity=0x7f03003b;
        public static final int register_base_info=0x7f03003c;
        public static final int register_phone=0x7f03003d;
        public static final int register_setpasword=0x7f03003e;
        public static final int register_titlebar=0x7f03003f;
        public static final int register_user_name=0x7f030040;
        public static final int right_menu_item=0x7f030041;
        public static final int row_chat_history=0x7f030042;
        public static final int row_expression=0x7f030043;
        public static final int row_received_file=0x7f030044;
        public static final int row_received_location=0x7f030045;
        public static final int row_received_message=0x7f030046;
        public static final int row_received_picture=0x7f030047;
        public static final int row_received_video=0x7f030048;
        public static final int row_received_video_call=0x7f030049;
        public static final int row_received_voice=0x7f03004a;
        public static final int row_received_voice_call=0x7f03004b;
        public static final int row_sent_file=0x7f03004c;
        public static final int row_sent_location=0x7f03004d;
        public static final int row_sent_message=0x7f03004e;
        public static final int row_sent_picture=0x7f03004f;
        public static final int row_sent_video=0x7f030050;
        public static final int row_sent_video_call=0x7f030051;
        public static final int row_sent_voice=0x7f030052;
        public static final int row_sent_voice_call=0x7f030053;
        public static final int select_pic_popowinow_layout=0x7f030054;
        public static final int share_popwindow_layout=0x7f030055;
        public static final int time_header_label=0x7f030056;
        public static final int time_picker_dialog=0x7f030057;
        public static final int title_bar=0x7f030058;
        public static final int user_info_info=0x7f030059;
        public static final int user_info_yanzhi=0x7f03005a;
        public static final int user_self_info_info=0x7f03005b;
        public static final int version_update=0x7f03005c;
        public static final int xlistview_footer=0x7f03005d;
        public static final int xlistview_header=0x7f03005e;
        public static final int yanzhibang_layout=0x7f03005f;
        public static final int year_label_text_view=0x7f030060;
    }
    public static final class raw {
        public static final int cities=0x7f050000;
        public static final int province=0x7f050001;
    }
    public static final class string {
        public static final int Add_a_button_was_clicked=0x7f0800f5;
        public static final int Add_a_friend=0x7f0800bb;
        public static final int Add_group_members_fail=0x7f0800ee;
        public static final int Agree_with_failure=0x7f080136;
        public static final int Agreed_to_your_group_chat_application=0x7f08010d;
        public static final int Application_and_notify=0x7f080089;
        public static final int Apply_to_the_group_of=0x7f080132;
        public static final int Are_agree_with=0x7f080135;
        public static final int Are_connected_to_each_other=0x7f080123;
        public static final int Are_logged_out=0x7f08011e;
        public static final int Are_moving_to_blacklist=0x7f0800ea;
        public static final int Are_removed=0x7f0800f7;
        public static final int Cant_chat_with_yourself=0x7f0800db;
        public static final int Change_the_group_name=0x7f08013c;
        public static final int Confirm_password_cannot_be_empty=0x7f080116;
        public static final int Connection_failure=0x7f080128;
        public static final int Current_version=0x7f080093;
        public static final int Delete_failed=0x7f0800dd;
        public static final int Delete_the_contact=0x7f08013a;
        public static final int Did_not_download=0x7f08012f;
        public static final int Dissolve_group_chat_tofail=0x7f0800ed;
        public static final int Download_the_pictures=0x7f08011f;
        public static final int Download_the_pictures_new=0x7f080120;
        public static final int Empty_the_chat_record=0x7f08009f;
        public static final int Exit_the_group_chat=0x7f0800b8;
        public static final int Exit_the_group_chat_failure=0x7f0800ec;
        public static final int Failed_to_create_groups=0x7f080112;
        public static final int Failed_to_download_file=0x7f080121;
        public static final int Failed_to_get_group_chat_information=0x7f0800f9;
        public static final int Failed_to_join_the_group_chat=0x7f0800fe;
        public static final int File_does_not_exist=0x7f0800d0;
        public static final int Group_chat=0x7f0800b4;
        public static final int Group_chat_information=0x7f0800a3;
        public static final int Group_chat_profile=0x7f08009a;
        public static final int Group_name_cannot_be_empty=0x7f080110;
        public static final int Group_of_Lord=0x7f0800a4;
        public static final int Hands_free=0x7f0800ae;
        public static final int Has_agreed_to=0x7f080133;
        public static final int Has_agreed_to_your_friend_request=0x7f080130;
        public static final int Has_been_cancelled=0x7f0800cb;
        public static final int Has_refused_to=0x7f080134;
        public static final int Have_downloaded=0x7f08012e;
        public static final int In_the_call=0x7f080126;
        public static final int Into_the_blacklist=0x7f08012d;
        public static final int Introduction=0x7f0800a5;
        public static final int Invite_you_to_join_a_group_chat=0x7f08010c;
        public static final int Is_download_voice_click_later=0x7f080137;
        public static final int Is_landing=0x7f080104;
        public static final int Is_moved_into_blacklist=0x7f0800de;
        public static final int Is_not_yet_connected_to_the_server=0x7f080124;
        public static final int Is_sending_a_request=0x7f0800fa;
        public static final int Is_the_registered=0x7f080118;
        public static final int Is_to_create_a_group_chat=0x7f080111;
        public static final int Is_unblock=0x7f0800ef;
        public static final int Join_the_group_chat=0x7f0800fd;
        public static final int Less_than_chat_server_connection=0x7f08010a;
        public static final int Log_Upload_failed=0x7f0800e0;
        public static final int Log_uploaded_successfully=0x7f0800df;
        public static final int Login_failed=0x7f080107;
        public static final int Logoff_notification=0x7f08010e;
        public static final int Making_sure_your_location=0x7f0800bf;
        public static final int Modify_the_group_name_successful=0x7f0800e8;
        public static final int Move_into_blacklist_failure=0x7f0800d8;
        public static final int Move_into_blacklist_success=0x7f0800d7;
        public static final int Move_into_the_blacklist_new=0x7f08013b;
        public static final int Network_error=0x7f0800be;
        public static final int Not_Set=0x7f080094;
        public static final int Open_group_chat=0x7f08009d;
        public static final int Open_group_members_invited=0x7f08009c;
        public static final int Open_the_equipment_failure=0x7f080115;
        public static final int Password_cannot_be_empty=0x7f080102;
        public static final int Please_enter_a_username=0x7f0800b6;
        public static final int Recording_without_permission=0x7f0800d4;
        public static final int Refused=0x7f0800c5;
        public static final int Registered_successfully=0x7f080119;
        public static final int Registration_failed=0x7f08011d;
        public static final int Remove_the_notification=0x7f08010f;
        public static final int Removed_from_the_failure=0x7f0800c2;
        public static final int Request_add_buddy_failure=0x7f0800bd;
        public static final int Request_to_add_you_as_a_friend=0x7f080131;
        public static final int Request_to_join=0x7f0800fb;
        public static final int Select_the_contact=0x7f0800a2;
        public static final int Send_the_following_pictures=0x7f080138;
        public static final int Send_voice_need_sdcard_support=0x7f0800d3;
        public static final int Shielding_of_the_message=0x7f0800a0;
        public static final int The_delete_button_is_clicked=0x7f0800f4;
        public static final int The_dissolution_of_chatting=0x7f0800a1;
        public static final int The_dissolution_of_chatting_new=0x7f08013d;
        public static final int The_file_is_not_greater_than_10_m=0x7f0800d1;
        public static final int The_new_group_chat=0x7f080096;
        public static final int The_other_is_hang_up=0x7f08012b;
        public static final int The_other_is_not_online=0x7f0800c7;
        public static final int The_other_is_on_the_phone=0x7f0800c8;
        public static final int The_other_is_on_the_phone_please=0x7f08012a;
        public static final int The_other_party_did_not_answer=0x7f0800c9;
        public static final int The_other_party_did_not_answer_new=0x7f08012c;
        public static final int The_other_party_has_refused_to=0x7f0800c6;
        public static final int The_other_party_is_not_online=0x7f080129;
        public static final int The_other_party_refused_to_accept=0x7f080127;
        public static final int The_recording_time_is_too_short=0x7f0800d5;
        public static final int The_video_to_start=0x7f080113;
        public static final int This_user_is_already_your_friend=0x7f0800ba;
        public static final int To_join_the_chat=0x7f0800a6;
        public static final int Two_input_password=0x7f080117;
        public static final int Upload_the_log=0x7f080095;
        public static final int User_already_exists=0x7f08011b;
        public static final int User_name_cannot_be_empty=0x7f080101;
        public static final int Version_number_is_wrong=0x7f080122;
        public static final int Video_footage=0x7f080100;
        public static final int Whether_the_public=0x7f08009b;
        public static final int Whether_to_empty_all_chats=0x7f0800d2;
        public static final int Whether_to_send=0x7f080114;
        public static final int action_settings=0x7f080025;
        public static final int add_friend=0x7f08008e;
        public static final int add_public_chat_room=0x7f080098;
        public static final int add_public_group_chat=0x7f080097;
        public static final int address_book=0x7f080086;
        public static final int agree=0x7f0800b3;
        public static final int ampm_circle_radius_multiplier=0x7f080003;
        public static final int answer=0x7f0800b0;
        public static final int app_name=0x7f080023;
        public static final int are_empty_group_of_news=0x7f0800e6;
        public static final int attach_file=0x7f08004a;
        public static final int attach_location=0x7f080049;
        public static final int attach_picture=0x7f080047;
        public static final int attach_smile=0x7f080046;
        public static final int attach_take_pic=0x7f080048;
        public static final int attach_video_call=0x7f08004c;
        public static final int attach_voice_call=0x7f08004b;
        public static final int back=0x7f080042;
        public static final int be_removing=0x7f0800c3;
        public static final int being_added=0x7f0800e3;
        public static final int black_item=0x7f080090;
        public static final int blacklist=0x7f08009e;
        public static final int book_black=0x7f080084;
        public static final int button_add=0x7f080070;
        public static final int button_cancel=0x7f08006d;
        public static final int button_logout=0x7f08005e;
        public static final int button_pushtotalk=0x7f080044;
        public static final int button_save=0x7f08006e;
        public static final int button_search=0x7f08006f;
        public static final int button_send=0x7f080045;
        public static final int button_uploadlog=0x7f08005f;
        public static final int call_duration=0x7f0800c4;
        public static final int cancel=0x7f080061;
        public static final int cant_find_pictures=0x7f0800cf;
        public static final int change_the_group_name_failed_please=0x7f0800e9;
        public static final int chat_room=0x7f08008d;
        public static final int chatroom_allow_owner_leave=0x7f08013f;
        public static final int chatset=0x7f080082;
        public static final int chatting_is_dissolution=0x7f0800e5;
        public static final int circle_radius_multiplier=0x7f080000;
        public static final int circle_radius_multiplier_24HourMode=0x7f080001;
        public static final int clear_all_records=0x7f080064;
        public static final int clear_records=0x7f080063;
        public static final int confirm_forward_to=0x7f080075;
        public static final int confirm_resend=0x7f080059;
        public static final int confirm_the_members=0x7f0800f8;
        public static final int confirmpassword=0x7f0800ab;
        public static final int connect_conflict=0x7f08007b;
        public static final int connect_failuer_toast=0x7f08005a;
        public static final int copy=0x7f08005c;
        public static final int copy_message=0x7f080054;
        public static final int cube_ptr_hours_ago=0x7f080022;
        public static final int cube_ptr_last_update=0x7f08001f;
        public static final int cube_ptr_minutes_ago=0x7f080021;
        public static final int cube_ptr_pull_down=0x7f08001a;
        public static final int cube_ptr_pull_down_to_refresh=0x7f08001b;
        public static final int cube_ptr_refresh_complete=0x7f08001e;
        public static final int cube_ptr_refreshing=0x7f08001d;
        public static final int cube_ptr_release_to_refresh=0x7f08001c;
        public static final int cube_ptr_seconds_ago=0x7f080020;
        /**  DO NOT TRANSLATE 
         */
        public static final int day_of_week_label_typeface=0x7f080011;
        public static final int day_picker_description=0x7f08000b;
        public static final int delete=0x7f080057;
        public static final int delete_conversation=0x7f080053;
        public static final int delete_conversation_messages=0x7f080052;
        public static final int delete_message=0x7f080051;
        public static final int delete_video=0x7f080056;
        public static final int delete_voice=0x7f080055;
        /**  Accessibility announcement when a number that had been typed in is deleted [CHAR_LIMIT=NONE] 
         */
        public static final int deleted_key=0x7f080014;
        public static final int deleting=0x7f0800dc;
        public static final int diagnose=0x7f080091;
        public static final int did_not_answer=0x7f0800ca;
        public static final int dissolution_group_hint=0x7f080079;
        public static final int done_label=0x7f08000a;
        public static final int downwaiting=0x7f0800ac;
        public static final int em_user_remove=0x7f08007c;
        public static final int exit_group=0x7f08007a;
        public static final int exit_group_hint=0x7f080078;
        public static final int expression=0x7f0800c1;
        public static final int failed_to_move_into=0x7f0800eb;
        public static final int file=0x7f08006b;
        public static final int finished=0x7f08003a;
        public static final int forward=0x7f08005d;
        public static final int from_photo_album=0x7f080039;
        public static final int get_failed_please_check=0x7f0800e1;
        public static final int gorup_not_found=0x7f08013e;
        public static final int group_chat=0x7f08008c;
        public static final int group_is_blocked=0x7f0800f1;
        public static final int group_name=0x7f080099;
        public static final int group_of_shielding=0x7f0800f2;
        public static final int hang_up=0x7f0800af;
        public static final int have_connected_with=0x7f080125;
        public static final int have_you_removed=0x7f080109;
        public static final int hello_world=0x7f080024;
        /** 
         Content description for the hour selector in the time picker, which displays
         selectable hours of the day along the inside edge of a circle, as in an analog clock.
         [CHAR LIMIT=50]
    
         */
        public static final int hour_picker_description=0x7f080015;
        public static final int input_phone_num=0x7f080033;
        public static final int inupt_again_password=0x7f080037;
        public static final int inupt_password=0x7f080036;
        public static final int inupt_telephone=0x7f080035;
        public static final int inupt_user_name=0x7f080034;
        public static final int is_down_please_wait=0x7f0800b7;
        public static final int is_modify_the_group_name=0x7f0800e7;
        public static final int is_quit_the_group_chat=0x7f0800e4;
        public static final int item_is_selected=0x7f08000f;
        public static final int list_is_for=0x7f080105;
        public static final int location_message=0x7f080066;
        public static final int location_prefix=0x7f080068;
        public static final int location_recv=0x7f080065;
        public static final int login=0x7f0800a7;
        public static final int login_failure_failed=0x7f080106;
        public static final int logout=0x7f080076;
        public static final int logout_hint=0x7f080077;
        /** 
         Content description for the minute selector in the time picker, which displays
         selectable five-minute intervals along the inside edge of a circle, as in an analog clock.
         [CHAR LIMIT=50]
    
         */
        public static final int minute_picker_description=0x7f080016;
        public static final int move_up_to_cancel=0x7f08004e;
        public static final int mute=0x7f0800ad;
        public static final int network_anomalies=0x7f08011a;
        public static final int network_isnot_available=0x7f080072;
        public static final int network_unavailable=0x7f08005b;
        public static final int newchat=0x7f0800b2;
        public static final int newnotify=0x7f08007f;
        public static final int next_step=0x7f080032;
        public static final int nickname_description=0x7f08008b;
        public static final int not_add_myself=0x7f0800b9;
        public static final int not_connect_to_server=0x7f0800cd;
        public static final int not_delete_myself=0x7f0800f6;
        public static final int not_download=0x7f0800b5;
        public static final int notify=0x7f08007e;
        public static final int now_refresh_list=0x7f080088;
        public static final int numbers_radius_multiplier_inner=0x7f080005;
        public static final int numbers_radius_multiplier_normal=0x7f080004;
        public static final int numbers_radius_multiplier_outer=0x7f080006;
        public static final int ok=0x7f080060;
        public static final int password=0x7f0800a9;
        public static final int people=0x7f0800e2;
        public static final int picture=0x7f080069;
        public static final int please_check=0x7f0800c0;
        public static final int please_set_the_current=0x7f080103;
        public static final int prompt=0x7f080062;
        public static final int ptr_last_updated=0x7f08002a;
        public static final int ptr_pull_to_refresh=0x7f080027;
        public static final int ptr_refreshing=0x7f080029;
        public static final int ptr_release_to_refresh=0x7f080028;
        public static final int push_nick=0x7f080092;
        public static final int radial_numbers_typeface=0x7f080017;
        public static final int receive_the_passthrough=0x7f080108;
        public static final int recoding_fail=0x7f080073;
        public static final int recording_video=0x7f080067;
        public static final int register=0x7f0800aa;
        public static final int registration_failed_without_permission=0x7f08011c;
        public static final int release_to_cancel=0x7f08004f;
        public static final int remove_group_of=0x7f0800f0;
        public static final int resend=0x7f080058;
        public static final int sans_serif=0x7f080010;
        public static final int save=0x7f080043;
        public static final int save_new_nickname=0x7f08008a;
        public static final int sd_card_does_not_exist=0x7f0800ce;
        public static final int search=0x7f08008f;
        public static final int search_header=0x7f080071;
        public static final int search_new=0x7f080139;
        public static final int select_contacts=0x7f080074;
        public static final int select_day=0x7f08000d;
        public static final int select_hours=0x7f080018;
        public static final int select_minutes=0x7f080019;
        public static final int select_year=0x7f08000e;
        public static final int selection_radius_multiplier=0x7f080002;
        public static final int send_fail=0x7f080050;
        public static final int send_failure_please=0x7f0800d6;
        public static final int send_successful=0x7f0800bc;
        public static final int send_the_request_is=0x7f0800fc;
        public static final int session=0x7f080085;
        public static final int set=0x7f08007d;
        public static final int setting=0x7f080087;
        public static final int shake=0x7f080081;
        public static final int sure_to_empty_this=0x7f0800f3;
        public static final int take_photo=0x7f080038;
        public static final int temporary_does_not=0x7f0800ff;
        /**  环信 
         */
        public static final int text_ack_msg=0x7f080040;
        public static final int text_delivered_msg=0x7f080041;
        public static final int text_size_multiplier_inner=0x7f080008;
        public static final int text_size_multiplier_normal=0x7f080007;
        public static final int text_size_multiplier_outer=0x7f080009;
        public static final int the_current_group=0x7f0800da;
        public static final int the_current_network=0x7f08010b;
        public static final int time_placeholder=0x7f080012;
        public static final int time_separator=0x7f080013;
        public static final int title_activity_about=0x7f080140;
        public static final int title_activity_guan_zhu=0x7f08003f;
        public static final int title_activity_main=0x7f080026;
        public static final int title_activity_personal_center=0x7f08003c;
        public static final int title_activity_picture_server_comment=0x7f080141;
        public static final int title_activity_self_info=0x7f08003d;
        public static final int title_activity_up_date_user_name=0x7f08003e;
        public static final int title_activity_user_info=0x7f08003b;
        public static final int title_activity_welcome=0x7f080142;
        public static final int unable_to_connect=0x7f0800b1;
        public static final int unable_to_get_loaction=0x7f0800cc;
        public static final int user_card=0x7f08004d;
        public static final int user_name=0x7f0800a8;
        public static final int video=0x7f08006a;
        public static final int viewpager_indicator=0x7f080031;
        public static final int voice=0x7f080080;
        public static final int voice_call=0x7f08006c;
        public static final int xlistview_footer_hint_normal=0x7f08002f;
        public static final int xlistview_footer_hint_ready=0x7f080030;
        public static final int xlistview_header_hint_loading=0x7f08002d;
        public static final int xlistview_header_hint_normal=0x7f08002b;
        public static final int xlistview_header_hint_ready=0x7f08002c;
        public static final int xlistview_header_last_time=0x7f08002e;
        public static final int yangshengqi=0x7f080083;
        public static final int year_picker_description=0x7f08000c;
        public static final int you_are_group=0x7f0800d9;
    }
    public static final class style {
        /** 
        Base application theme, dependent on API level. This theme is replaced
        by AppBaseTheme from res/values-vXX/styles.xml on newer devices.
    

            Theme customizations available in newer API levels can go in
            res/values-vXX/styles.xml, while customizations related to
            backward-compatibility can go here.
        

        Base application theme for API 11+. This theme completely replaces
        AppBaseTheme from res/values/styles.xml on API 11+ devices.
    
 API 11 theme customizations can go here. 

        Base application theme for API 14+. This theme completely replaces
        AppBaseTheme from BOTH res/values/styles.xml and
        res/values-v11/styles.xml on API 14+ devices.
    
 API 14 theme customizations can go here. 

        Base application theme, dependent on API level. This theme is replaced
        by AppBaseTheme from res/values-vXX/styles.xml on newer devices.

    

            Theme customizations available in newer API levels can go in
            res/values-vXX/styles.xml, while customizations related to
            backward-compatibility can go here.

        

        Base application theme, dependent on API level. This theme is replaced
        by AppBaseTheme from res/values-vXX/styles.xml on newer devices.






    

            Theme customizations available in newer API levels can go in
            res/values-vXX/styles.xml, while customizations related to
            backward-compatibility can go here.






        

        Base application theme for API 11+. This theme completely replaces
        AppBaseTheme from res/values/styles.xml on API 11+ devices.
    
 API 11 theme customizations can go here. 

        Base application theme for API 14+. This theme completely replaces
        AppBaseTheme from BOTH res/values/styles.xml and
        res/values-v11/styles.xml on API 14+ devices.
    
 API 14 theme customizations can go here. 
         */
        public static final int AppBaseTheme=0x7f0a0000;
        /**  Application theme. 
 All customizations that are NOT specific to a particular API-level can go here. 
 Application theme. 
 All customizations that are NOT specific to a particular API-level can go here. 
 Application theme. 
 All customizations that are NOT specific to a particular API-level can go here. 
         */
        public static final int AppTheme=0x7f0a0001;
        public static final int PromptDialogStyle=0x7f0a0007;
        public static final int ampm_label=0x7f0a0003;
        public static final int chat_content_date_style=0x7f0a0011;
        /**  <item name="android:background">@drawable/timestampe_bg</item> 
         */
        public static final int chat_text_date_style=0x7f0a0013;
        /**  <item name="android:gravity">center</item> 
         */
        public static final int chat_text_name_style=0x7f0a0012;
        public static final int day_of_week_label_condensed=0x7f0a0004;
        public static final int done_button_light=0x7f0a0006;
        public static final int loading_dialog=0x7f0a000f;
        public static final int ptr_arrow=0x7f0a000a;
        public static final int ptr_header=0x7f0a0009;
        public static final int ptr_headerContainer=0x7f0a0008;
        public static final int ptr_last_updated=0x7f0a000e;
        public static final int ptr_spinner=0x7f0a000b;
        public static final int ptr_text=0x7f0a000d;
        public static final int ptr_textwrapper=0x7f0a000c;
        public static final int roomRatingBar=0x7f0a0010;
        public static final int time_label=0x7f0a0002;
        /**  Style for dialog labels. 
         */
        public static final int time_label_thin=0x7f0a0005;
    }
    public static final class update_id {
        public static final int ivLogo=0x7f0b0000;
        public static final int pbDownload=0x7f0b0001;
        public static final int tvProcess=0x7f0b0002;
    }
    public static final class styleable {
        /** Attributes that can be used with a AbsListView.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #AbsListView_cacheColorHint com.biyanzhi:cacheColorHint}</code></td><td>
             Indicates that this list will always be drawn on top of solid, single-color
             opaque background.</td></tr>
           <tr><td><code>{@link #AbsListView_choiceMode com.biyanzhi:choiceMode}</code></td><td>
             Defines the choice behavior for the view.</td></tr>
           <tr><td><code>{@link #AbsListView_drawSelectorOnTop com.biyanzhi:drawSelectorOnTop}</code></td><td>
             When set to true, the selector will be drawn over the selected item.</td></tr>
           <tr><td><code>{@link #AbsListView_fastScrollAlwaysVisible com.biyanzhi:fastScrollAlwaysVisible}</code></td><td>
             When set to true, the list will always show the fast scroll interface.</td></tr>
           <tr><td><code>{@link #AbsListView_fastScrollEnabled com.biyanzhi:fastScrollEnabled}</code></td><td>
             Enables the fast scroll thumb that can be dragged to quickly scroll through
             the list.</td></tr>
           <tr><td><code>{@link #AbsListView_listSelector com.biyanzhi:listSelector}</code></td><td> Drawable used to indicate the currently selected item in the list.</td></tr>
           <tr><td><code>{@link #AbsListView_scrollingCache com.biyanzhi:scrollingCache}</code></td><td>
             When set to true, the list uses a drawing cache during scrolling.</td></tr>
           <tr><td><code>{@link #AbsListView_smoothScrollbar com.biyanzhi:smoothScrollbar}</code></td><td>
             When set to true, the list will use a more refined calculation
             method based on the pixels height of the items visible on screen.</td></tr>
           <tr><td><code>{@link #AbsListView_stackFromBottom com.biyanzhi:stackFromBottom}</code></td><td> Used by ListView and GridView to stack their content from the bottom.</td></tr>
           <tr><td><code>{@link #AbsListView_textFilterEnabled com.biyanzhi:textFilterEnabled}</code></td><td>
             When set to true, the list will filter results as the user types.</td></tr>
           <tr><td><code>{@link #AbsListView_transcriptMode com.biyanzhi:transcriptMode}</code></td><td>
             Sets the transcript mode for the list.</td></tr>
           </table>
           @see #AbsListView_cacheColorHint
           @see #AbsListView_choiceMode
           @see #AbsListView_drawSelectorOnTop
           @see #AbsListView_fastScrollAlwaysVisible
           @see #AbsListView_fastScrollEnabled
           @see #AbsListView_listSelector
           @see #AbsListView_scrollingCache
           @see #AbsListView_smoothScrollbar
           @see #AbsListView_stackFromBottom
           @see #AbsListView_textFilterEnabled
           @see #AbsListView_transcriptMode
         */
        public static final int[] AbsListView = {
            0x7f01005f, 0x7f010060, 0x7f010061, 0x7f010062,
            0x7f010063, 0x7f010064, 0x7f010065, 0x7f010066,
            0x7f010067, 0x7f010068, 0x7f010069
        };
        /**
          <p>
          @attr description
          
             Indicates that this list will always be drawn on top of solid, single-color
             opaque background. This allows the list to optimize drawing.
        


          <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.biyanzhi:cacheColorHint
        */
        public static final int AbsListView_cacheColorHint = 6;
        /**
          <p>
          @attr description
          
             Defines the choice behavior for the view. By default, lists do not have
             any choice behavior. By setting the choiceMode to singleChoice, the list
             allows up to one item to be in a chosen state. By setting the choiceMode to
             multipleChoice, the list allows any number of items to be chosen.
             Finally, by setting the choiceMode to multipleChoiceModal the list allows
             any number of items to be chosen in a special selection mode.
             The application will supply a
             {@link android.widget.AbsListView.MultiChoiceModeListener} using
             {@link android.widget.AbsListView#setMultiChoiceModeListener} to control the
             selection mode. This uses the {@link android.view.ActionMode} API.
        


          <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>none</code></td><td>0</td><td> Normal list that does not indicate choices. </td></tr>
<tr><td><code>singleChoice</code></td><td>1</td><td> The list allows up to one choice. </td></tr>
<tr><td><code>multipleChoice</code></td><td>2</td><td> The list allows multiple choices. </td></tr>
<tr><td><code>multipleChoiceModal</code></td><td>3</td><td> The list allows multiple choices in a custom selection mode. </td></tr>
</table>
          <p>This is a private symbol.
          @attr name com.biyanzhi:choiceMode
        */
        public static final int AbsListView_choiceMode = 9;
        /**
          <p>
          @attr description
          
             When set to true, the selector will be drawn over the selected item.
             Otherwise the selector is drawn behind the selected item. The default
             value is false.
        


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.biyanzhi:drawSelectorOnTop
        */
        public static final int AbsListView_drawSelectorOnTop = 1;
        /**
          <p>
          @attr description
          
             When set to true, the list will always show the fast scroll interface.
             This setting implies fastScrollEnabled.
        


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.biyanzhi:fastScrollAlwaysVisible
        */
        public static final int AbsListView_fastScrollAlwaysVisible = 10;
        /**
          <p>
          @attr description
          
             Enables the fast scroll thumb that can be dragged to quickly scroll through
             the list.
        


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.biyanzhi:fastScrollEnabled
        */
        public static final int AbsListView_fastScrollEnabled = 7;
        /**
          <p>
          @attr description
           Drawable used to indicate the currently selected item in the list. 


          <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
          <p>This is a private symbol.
          @attr name com.biyanzhi:listSelector
        */
        public static final int AbsListView_listSelector = 0;
        /**
          <p>
          @attr description
          
             When set to true, the list uses a drawing cache during scrolling.
             This makes the rendering faster but uses more memory. The default
             value is true.
        


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.biyanzhi:scrollingCache
        */
        public static final int AbsListView_scrollingCache = 3;
        /**
          <p>
          @attr description
          
             When set to true, the list will use a more refined calculation
             method based on the pixels height of the items visible on screen. This
             property is set to true by default but should be set to false if your adapter
             will display items of varying heights. When this property is set to true and
             your adapter displays items of varying heights, the scrollbar thumb will
             change size as the user scrolls through the list. When set to fale, the list
             will use only the number of items in the adapter and the number of items visible
             on screen to determine the scrollbar's properties.
        


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.biyanzhi:smoothScrollbar
        */
        public static final int AbsListView_smoothScrollbar = 8;
        /**
          <p>
          @attr description
           Used by ListView and GridView to stack their content from the bottom. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.biyanzhi:stackFromBottom
        */
        public static final int AbsListView_stackFromBottom = 2;
        /**
          <p>
          @attr description
          
             When set to true, the list will filter results as the user types. The
             List's adapter must support the Filterable interface for this to work.
        


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.biyanzhi:textFilterEnabled
        */
        public static final int AbsListView_textFilterEnabled = 4;
        /**
          <p>
          @attr description
          
             Sets the transcript mode for the list. In transcript mode, the list
             scrolls to the bottom to make new items visible when they are added.
        


          <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>disabled</code></td><td>0</td><td> Disables transcript mode. This is the default value. </td></tr>
<tr><td><code>normal</code></td><td>1</td><td>
                 The list will automatically scroll to the bottom when
                 a data set change notification is received and only if the last item is
                 already visible on screen.
            </td></tr>
<tr><td><code>alwaysScroll</code></td><td>2</td><td>
                 The list will automatically scroll to the bottom, no matter what items
                 are currently visible.
            </td></tr>
</table>
          <p>This is a private symbol.
          @attr name com.biyanzhi:transcriptMode
        */
        public static final int AbsListView_transcriptMode = 5;
        /** Attributes that can be used with a ListView.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #ListView_dividerHeight com.biyanzhi:dividerHeight}</code></td><td> Drawable or color to draw between list items.</td></tr>
           <tr><td><code>{@link #ListView_footerDividersEnabled com.biyanzhi:footerDividersEnabled}</code></td><td>
             When set to false, the ListView will not draw the divider before each footer view.</td></tr>
           <tr><td><code>{@link #ListView_headerDividersEnabled com.biyanzhi:headerDividersEnabled}</code></td><td>
             When set to false, the ListView will not draw the divider after each header view.</td></tr>
           <tr><td><code>{@link #ListView_overScrollFooter com.biyanzhi:overScrollFooter}</code></td><td> Drawable to draw below list content.</td></tr>
           <tr><td><code>{@link #ListView_overScrollHeader com.biyanzhi:overScrollHeader}</code></td><td> Drawable to draw above list content.</td></tr>
           </table>
           @see #ListView_dividerHeight
           @see #ListView_footerDividersEnabled
           @see #ListView_headerDividersEnabled
           @see #ListView_overScrollFooter
           @see #ListView_overScrollHeader
         */
        public static final int[] ListView = {
            0x7f01006a, 0x7f01006b, 0x7f01006c, 0x7f01006d,
            0x7f01006e
        };
        /**
          <p>
          @attr description
           Drawable or color to draw between list items. 
 <attr name="divider" format="reference|color" /> 

             Height of the divider. Will use the intrinsic height of the divider if this
             is not specified.
        


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.biyanzhi:dividerHeight
        */
        public static final int ListView_dividerHeight = 0;
        /**
          <p>
          @attr description
          
             When set to false, the ListView will not draw the divider before each footer view.
             The default value is true.
        


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.biyanzhi:footerDividersEnabled
        */
        public static final int ListView_footerDividersEnabled = 2;
        /**
          <p>
          @attr description
          
             When set to false, the ListView will not draw the divider after each header view.
             The default value is true.
        


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.biyanzhi:headerDividersEnabled
        */
        public static final int ListView_headerDividersEnabled = 1;
        /**
          <p>
          @attr description
           Drawable to draw below list content. 


          <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
          <p>This is a private symbol.
          @attr name com.biyanzhi:overScrollFooter
        */
        public static final int ListView_overScrollFooter = 4;
        /**
          <p>
          @attr description
           Drawable to draw above list content. 


          <p>May be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
<p>May be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
          <p>This is a private symbol.
          @attr name com.biyanzhi:overScrollHeader
        */
        public static final int ListView_overScrollHeader = 3;
        /** Attributes that can be used with a PinterestLikeAdapterView.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #PinterestLikeAdapterView_plaColumnNumber com.biyanzhi:plaColumnNumber}</code></td><td></td></tr>
           <tr><td><code>{@link #PinterestLikeAdapterView_plaColumnPaddingLeft com.biyanzhi:plaColumnPaddingLeft}</code></td><td></td></tr>
           <tr><td><code>{@link #PinterestLikeAdapterView_plaColumnPaddingRight com.biyanzhi:plaColumnPaddingRight}</code></td><td></td></tr>
           <tr><td><code>{@link #PinterestLikeAdapterView_plaLandscapeColumnNumber com.biyanzhi:plaLandscapeColumnNumber}</code></td><td></td></tr>
           </table>
           @see #PinterestLikeAdapterView_plaColumnNumber
           @see #PinterestLikeAdapterView_plaColumnPaddingLeft
           @see #PinterestLikeAdapterView_plaColumnPaddingRight
           @see #PinterestLikeAdapterView_plaLandscapeColumnNumber
         */
        public static final int[] PinterestLikeAdapterView = {
            0x7f010010, 0x7f010011, 0x7f010012, 0x7f010013
        };
        /**
          <p>This symbol is the offset where the {@link com.biyanzhi.R.attr#plaColumnNumber}
          attribute's value can be found in the {@link #PinterestLikeAdapterView} array.


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.biyanzhi:plaColumnNumber
        */
        public static final int PinterestLikeAdapterView_plaColumnNumber = 0;
        /**
          <p>This symbol is the offset where the {@link com.biyanzhi.R.attr#plaColumnPaddingLeft}
          attribute's value can be found in the {@link #PinterestLikeAdapterView} array.


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.biyanzhi:plaColumnPaddingLeft
        */
        public static final int PinterestLikeAdapterView_plaColumnPaddingLeft = 2;
        /**
          <p>This symbol is the offset where the {@link com.biyanzhi.R.attr#plaColumnPaddingRight}
          attribute's value can be found in the {@link #PinterestLikeAdapterView} array.


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.biyanzhi:plaColumnPaddingRight
        */
        public static final int PinterestLikeAdapterView_plaColumnPaddingRight = 3;
        /**
          <p>This symbol is the offset where the {@link com.biyanzhi.R.attr#plaLandscapeColumnNumber}
          attribute's value can be found in the {@link #PinterestLikeAdapterView} array.


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.biyanzhi:plaLandscapeColumnNumber
        */
        public static final int PinterestLikeAdapterView_plaLandscapeColumnNumber = 1;
        /** Attributes that can be used with a PtrClassicHeader.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #PtrClassicHeader_ptr_rotate_ani_time com.biyanzhi:ptr_rotate_ani_time}</code></td><td></td></tr>
           </table>
           @see #PtrClassicHeader_ptr_rotate_ani_time
         */
        public static final int[] PtrClassicHeader = {
            0x7f01000d
        };
        /**
          <p>This symbol is the offset where the {@link com.biyanzhi.R.attr#ptr_rotate_ani_time}
          attribute's value can be found in the {@link #PtrClassicHeader} array.


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.biyanzhi:ptr_rotate_ani_time
        */
        public static final int PtrClassicHeader_ptr_rotate_ani_time = 0;
        /** Attributes that can be used with a PtrFrameLayout.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #PtrFrameLayout_ptr_content com.biyanzhi:ptr_content}</code></td><td></td></tr>
           <tr><td><code>{@link #PtrFrameLayout_ptr_duration_to_close com.biyanzhi:ptr_duration_to_close}</code></td><td></td></tr>
           <tr><td><code>{@link #PtrFrameLayout_ptr_duration_to_close_header com.biyanzhi:ptr_duration_to_close_header}</code></td><td></td></tr>
           <tr><td><code>{@link #PtrFrameLayout_ptr_header com.biyanzhi:ptr_header}</code></td><td> Optional.</td></tr>
           <tr><td><code>{@link #PtrFrameLayout_ptr_keep_header_when_refresh com.biyanzhi:ptr_keep_header_when_refresh}</code></td><td> keep header when refreshing</td></tr>
           <tr><td><code>{@link #PtrFrameLayout_ptr_pull_to_fresh com.biyanzhi:ptr_pull_to_fresh}</code></td><td> pull to refresh, otherwise release to refresh, default is release to refresh </td></tr>
           <tr><td><code>{@link #PtrFrameLayout_ptr_ratio_of_header_height_to_refresh com.biyanzhi:ptr_ratio_of_header_height_to_refresh}</code></td><td> the ration of the height of the header to trigger refresh </td></tr>
           <tr><td><code>{@link #PtrFrameLayout_ptr_resistance com.biyanzhi:ptr_resistance}</code></td><td> the resistance when you are moving the frame </td></tr>
           </table>
           @see #PtrFrameLayout_ptr_content
           @see #PtrFrameLayout_ptr_duration_to_close
           @see #PtrFrameLayout_ptr_duration_to_close_header
           @see #PtrFrameLayout_ptr_header
           @see #PtrFrameLayout_ptr_keep_header_when_refresh
           @see #PtrFrameLayout_ptr_pull_to_fresh
           @see #PtrFrameLayout_ptr_ratio_of_header_height_to_refresh
           @see #PtrFrameLayout_ptr_resistance
         */
        public static final int[] PtrFrameLayout = {
            0x7f010005, 0x7f010006, 0x7f010007, 0x7f010008,
            0x7f010009, 0x7f01000a, 0x7f01000b, 0x7f01000c
        };
        /**
          <p>This symbol is the offset where the {@link com.biyanzhi.R.attr#ptr_content}
          attribute's value can be found in the {@link #PtrFrameLayout} array.


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          @attr name com.biyanzhi:ptr_content
        */
        public static final int PtrFrameLayout_ptr_content = 1;
        /**
          <p>This symbol is the offset where the {@link com.biyanzhi.R.attr#ptr_duration_to_close}
          attribute's value can be found in the {@link #PtrFrameLayout} array.


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.biyanzhi:ptr_duration_to_close
        */
        public static final int PtrFrameLayout_ptr_duration_to_close = 4;
        /**
          <p>This symbol is the offset where the {@link com.biyanzhi.R.attr#ptr_duration_to_close_header}
          attribute's value can be found in the {@link #PtrFrameLayout} array.


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.biyanzhi:ptr_duration_to_close_header
        */
        public static final int PtrFrameLayout_ptr_duration_to_close_header = 5;
        /**
          <p>
          @attr description
           Optional. If you put header and content in xml, you can you these to specify them. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.biyanzhi:ptr_header
        */
        public static final int PtrFrameLayout_ptr_header = 0;
        /**
          <p>
          @attr description
           keep header when refreshing


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.biyanzhi:ptr_keep_header_when_refresh
        */
        public static final int PtrFrameLayout_ptr_keep_header_when_refresh = 7;
        /**
          <p>
          @attr description
           pull to refresh, otherwise release to refresh, default is release to refresh 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.biyanzhi:ptr_pull_to_fresh
        */
        public static final int PtrFrameLayout_ptr_pull_to_fresh = 6;
        /**
          <p>
          @attr description
           the ration of the height of the header to trigger refresh 


          <p>Must be a floating point value, such as "<code>1.2</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.biyanzhi:ptr_ratio_of_header_height_to_refresh
        */
        public static final int PtrFrameLayout_ptr_ratio_of_header_height_to_refresh = 3;
        /**
          <p>
          @attr description
           the resistance when you are moving the frame 


          <p>Must be a floating point value, such as "<code>1.2</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.biyanzhi:ptr_resistance
        */
        public static final int PtrFrameLayout_ptr_resistance = 2;
        /** Attributes that can be used with a PullScrollView.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #PullScrollView_header com.biyanzhi:header}</code></td><td></td></tr>
           <tr><td><code>{@link #PullScrollView_headerHeight com.biyanzhi:headerHeight}</code></td><td></td></tr>
           <tr><td><code>{@link #PullScrollView_headerVisibleHeight com.biyanzhi:headerVisibleHeight}</code></td><td></td></tr>
           </table>
           @see #PullScrollView_header
           @see #PullScrollView_headerHeight
           @see #PullScrollView_headerVisibleHeight
         */
        public static final int[] PullScrollView = {
            0x7f010002, 0x7f010003, 0x7f010004
        };
        /**
          <p>This symbol is the offset where the {@link com.biyanzhi.R.attr#header}
          attribute's value can be found in the {@link #PullScrollView} array.


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          @attr name com.biyanzhi:header
        */
        public static final int PullScrollView_header = 0;
        /**
          <p>This symbol is the offset where the {@link com.biyanzhi.R.attr#headerHeight}
          attribute's value can be found in the {@link #PullScrollView} array.


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.biyanzhi:headerHeight
        */
        public static final int PullScrollView_headerHeight = 1;
        /**
          <p>This symbol is the offset where the {@link com.biyanzhi.R.attr#headerVisibleHeight}
          attribute's value can be found in the {@link #PullScrollView} array.


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.biyanzhi:headerVisibleHeight
        */
        public static final int PullScrollView_headerVisibleHeight = 2;
        /** Attributes that can be used with a RoundAngleImageView.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #RoundAngleImageView_roundHeightimg com.biyanzhi:roundHeightimg}</code></td><td></td></tr>
           <tr><td><code>{@link #RoundAngleImageView_roundWidthimg com.biyanzhi:roundWidthimg}</code></td><td></td></tr>
           </table>
           @see #RoundAngleImageView_roundHeightimg
           @see #RoundAngleImageView_roundWidthimg
         */
        public static final int[] RoundAngleImageView = {
            0x7f01006f, 0x7f010070
        };
        /**
          <p>This symbol is the offset where the {@link com.biyanzhi.R.attr#roundHeightimg}
          attribute's value can be found in the {@link #RoundAngleImageView} array.


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.biyanzhi:roundHeightimg
        */
        public static final int RoundAngleImageView_roundHeightimg = 1;
        /**
          <p>This symbol is the offset where the {@link com.biyanzhi.R.attr#roundWidthimg}
          attribute's value can be found in the {@link #RoundAngleImageView} array.


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.biyanzhi:roundWidthimg
        */
        public static final int RoundAngleImageView_roundWidthimg = 0;
        /** Attributes that can be used with a SwipeLayout.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #SwipeLayout_drag_edge com.biyanzhi:drag_edge}</code></td><td></td></tr>
           <tr><td><code>{@link #SwipeLayout_show_mode com.biyanzhi:show_mode}</code></td><td></td></tr>
           </table>
           @see #SwipeLayout_drag_edge
           @see #SwipeLayout_show_mode
         */
        public static final int[] SwipeLayout = {
            0x7f010000, 0x7f010001
        };
        /**
          <p>This symbol is the offset where the {@link com.biyanzhi.R.attr#drag_edge}
          attribute's value can be found in the {@link #SwipeLayout} array.


          <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>left</code></td><td>0</td><td></td></tr>
<tr><td><code>right</code></td><td>1</td><td></td></tr>
<tr><td><code>top</code></td><td>2</td><td></td></tr>
<tr><td><code>bottom</code></td><td>3</td><td></td></tr>
</table>
          @attr name com.biyanzhi:drag_edge
        */
        public static final int SwipeLayout_drag_edge = 0;
        /**
          <p>This symbol is the offset where the {@link com.biyanzhi.R.attr#show_mode}
          attribute's value can be found in the {@link #SwipeLayout} array.


          <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>lay_down</code></td><td>0</td><td></td></tr>
<tr><td><code>pull_out</code></td><td>1</td><td></td></tr>
</table>
          @attr name com.biyanzhi:show_mode
        */
        public static final int SwipeLayout_show_mode = 1;
        /** Attributes that can be used with a View.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #View_accessibilityFocusable com.biyanzhi:accessibilityFocusable}</code></td><td> @hide Controls whether this view can take accessibility focus.</td></tr>
           <tr><td><code>{@link #View_alpha com.biyanzhi:alpha}</code></td><td>
             alpha property of the view, as a value between 0 (completely transparent) and 1
             (completely opaque).</td></tr>
           <tr><td><code>{@link #View_clickable com.biyanzhi:clickable}</code></td><td> Defines whether this view reacts to click events.</td></tr>
           <tr><td><code>{@link #View_contentDescription com.biyanzhi:contentDescription}</code></td><td>
             Defines text that briefly describes content of the view.</td></tr>
           <tr><td><code>{@link #View_drawingCacheQuality com.biyanzhi:drawingCacheQuality}</code></td><td>
             Defines the quality of translucent drawing caches.</td></tr>
           <tr><td><code>{@link #View_duplicateParentState com.biyanzhi:duplicateParentState}</code></td><td>
             When this attribute is set to true, the view gets its drawable state
             (focused, pressed, etc.</td></tr>
           <tr><td><code>{@link #View_fadeScrollbars com.biyanzhi:fadeScrollbars}</code></td><td> Defines whether to fade out scrollbars when they are not in use.</td></tr>
           <tr><td><code>{@link #View_fadingEdge com.biyanzhi:fadingEdge}</code></td><td>
             This attribute is deprecated and will be ignored as of
             API level 14 ({@link android.os.Build.VERSION_CODES#ICE_CREAM_SANDWICH}).</td></tr>
           <tr><td><code>{@link #View_fadingEdgeLength com.biyanzhi:fadingEdgeLength}</code></td><td> Defines the length of the fading edges.</td></tr>
           <tr><td><code>{@link #View_filterTouchesWhenObscured com.biyanzhi:filterTouchesWhenObscured}</code></td><td>
             Specifies whether to filter touches when the view's window is obscured by
             another visible window.</td></tr>
           <tr><td><code>{@link #View_fitsSystemWindows com.biyanzhi:fitsSystemWindows}</code></td><td>
             Boolean internal attribute to adjust view layout based on
             system windows such as the status bar.</td></tr>
           <tr><td><code>{@link #View_focusable com.biyanzhi:focusable}</code></td><td> Sets the padding, in pixels, of the start edge; see {@link android.R.attr#padding}.</td></tr>
           <tr><td><code>{@link #View_focusableInTouchMode com.biyanzhi:focusableInTouchMode}</code></td><td>
             Boolean that controls whether a view can take focus while in touch mode.</td></tr>
           <tr><td><code>{@link #View_hapticFeedbackEnabled com.biyanzhi:hapticFeedbackEnabled}</code></td><td>
             Boolean that controls whether a view should have haptic feedback
             enabled for events such as long presses.</td></tr>
           <tr><td><code>{@link #View_id com.biyanzhi:id}</code></td><td>
             Supply an identifier name for this view, to later retrieve it
             with {@link android.view.View#findViewById View.findViewById()} or
             {@link android.app.Activity#findViewById Activity.findViewById()}.</td></tr>
           <tr><td><code>{@link #View_importantForAccessibility com.biyanzhi:importantForAccessibility}</code></td><td>
             Controls how this View is important for accessibility which is if it fires
             accessibility events and if it is reported to accessibility services that
             query the screen.</td></tr>
           <tr><td><code>{@link #View_isScrollContainer com.biyanzhi:isScrollContainer}</code></td><td>
             Set this if the view will serve as a scrolling container, meaing
             that it can be resized to shrink its overall window so that there
             will be space for an input method.</td></tr>
           <tr><td><code>{@link #View_keepScreenOn com.biyanzhi:keepScreenOn}</code></td><td>
             Controls whether the view's window should keep the screen on
             while visible.</td></tr>
           <tr><td><code>{@link #View_layerType com.biyanzhi:layerType}</code></td><td>
             Specifies the type of layer backing this view.</td></tr>
           <tr><td><code>{@link #View_layoutDirection com.biyanzhi:layoutDirection}</code></td><td>
             Defines the direction of layout drawing.</td></tr>
           <tr><td><code>{@link #View_longClickable com.biyanzhi:longClickable}</code></td><td> Defines whether this view reacts to long click events.</td></tr>
           <tr><td><code>{@link #View_minHeight com.biyanzhi:minHeight}</code></td><td>
             Defines the minimum height of the view.</td></tr>
           <tr><td><code>{@link #View_minWidth com.biyanzhi:minWidth}</code></td><td>
             Defines the minimum width of the view.</td></tr>
           <tr><td><code>{@link #View_nextFocusDown com.biyanzhi:nextFocusDown}</code></td><td>
             Defines the next view to give focus to when the next focus is
             {@link android.view.View#FOCUS_DOWN}

             If the reference refers to a view that does not exist or is part
             of a hierarchy that is invisible, a {@link java.lang.RuntimeException}
             will result when the reference is accessed.</td></tr>
           <tr><td><code>{@link #View_nextFocusForward com.biyanzhi:nextFocusForward}</code></td><td>
             Defines the next view to give focus to when the next focus is
             {@link android.view.View#FOCUS_FORWARD}

             If the reference refers to a view that does not exist or is part
             of a hierarchy that is invisible, a {@link java.lang.RuntimeException}
             will result when the reference is accessed.</td></tr>
           <tr><td><code>{@link #View_nextFocusLeft com.biyanzhi:nextFocusLeft}</code></td><td>
             Defines the next view to give focus to when the next focus is
             {@link android.view.View#FOCUS_LEFT}.</td></tr>
           <tr><td><code>{@link #View_nextFocusRight com.biyanzhi:nextFocusRight}</code></td><td>
             Defines the next view to give focus to when the next focus is
             {@link android.view.View#FOCUS_RIGHT}

             If the reference refers to a view that does not exist or is part
             of a hierarchy that is invisible, a {@link java.lang.RuntimeException}
             will result when the reference is accessed.</td></tr>
           <tr><td><code>{@link #View_nextFocusUp com.biyanzhi:nextFocusUp}</code></td><td>
             Defines the next view to give focus to when the next focus is
             {@link android.view.View#FOCUS_UP}

             If the reference refers to a view that does not exist or is part
             of a hierarchy that is invisible, a {@link java.lang.RuntimeException}
             will result when the reference is accessed.</td></tr>
           <tr><td><code>{@link #View_onClick com.biyanzhi:onClick}</code></td><td>
             Name of the method in this View's context to invoke when the view is
             clicked.</td></tr>
           <tr><td><code>{@link #View_overScrollMode com.biyanzhi:overScrollMode}</code></td><td>
             Defines over-scrolling behavior.</td></tr>
           <tr><td><code>{@link #View_padding com.biyanzhi:padding}</code></td><td>
             A drawable to use as the background.</td></tr>
           <tr><td><code>{@link #View_paddingBottom com.biyanzhi:paddingBottom}</code></td><td> Sets the padding, in pixels, of the bottom edge; see {@link android.R.attr#padding}.</td></tr>
           <tr><td><code>{@link #View_paddingLeft com.biyanzhi:paddingLeft}</code></td><td> Sets the padding, in pixels, of the left edge; see {@link android.R.attr#padding}.</td></tr>
           <tr><td><code>{@link #View_paddingRight com.biyanzhi:paddingRight}</code></td><td> Sets the padding, in pixels, of the right edge; see {@link android.R.attr#padding}.</td></tr>
           <tr><td><code>{@link #View_paddingTop com.biyanzhi:paddingTop}</code></td><td> Sets the padding, in pixels, of the top edge; see {@link android.R.attr#padding}.</td></tr>
           <tr><td><code>{@link #View_requiresFadingEdge com.biyanzhi:requiresFadingEdge}</code></td><td> Defines which edges should be faded on scrolling.</td></tr>
           <tr><td><code>{@link #View_rotation com.biyanzhi:rotation}</code></td><td> rotation of the view, in degrees.</td></tr>
           <tr><td><code>{@link #View_rotationX com.biyanzhi:rotationX}</code></td><td> rotation of the view around the x axis, in degrees.</td></tr>
           <tr><td><code>{@link #View_rotationY com.biyanzhi:rotationY}</code></td><td> rotation of the view around the y axis, in degrees.</td></tr>
           <tr><td><code>{@link #View_saveEnabled com.biyanzhi:saveEnabled}</code></td><td>
             If unset, no state will be saved for this view when it is being
             frozen.</td></tr>
           <tr><td><code>{@link #View_scaleX com.biyanzhi:scaleX}</code></td><td> scale of the view in the x direction.</td></tr>
           <tr><td><code>{@link #View_scaleY com.biyanzhi:scaleY}</code></td><td> scale of the view in the y direction.</td></tr>
           <tr><td><code>{@link #View_scrollX com.biyanzhi:scrollX}</code></td><td> The initial horizontal scroll offset, in pixels.</td></tr>
           <tr><td><code>{@link #View_scrollY com.biyanzhi:scrollY}</code></td><td> The initial vertical scroll offset, in pixels.</td></tr>
           <tr><td><code>{@link #View_scrollbarAlwaysDrawHorizontalTrack com.biyanzhi:scrollbarAlwaysDrawHorizontalTrack}</code></td><td> Defines whether the horizontal scrollbar track should always be drawn.</td></tr>
           <tr><td><code>{@link #View_scrollbarAlwaysDrawVerticalTrack com.biyanzhi:scrollbarAlwaysDrawVerticalTrack}</code></td><td> Defines whether the vertical scrollbar track should always be drawn.</td></tr>
           <tr><td><code>{@link #View_scrollbarDefaultDelayBeforeFade com.biyanzhi:scrollbarDefaultDelayBeforeFade}</code></td><td> Defines the delay in milliseconds that a scrollbar waits before fade out.</td></tr>
           <tr><td><code>{@link #View_scrollbarFadeDuration com.biyanzhi:scrollbarFadeDuration}</code></td><td> Defines the delay in milliseconds that a scrollbar takes to fade out.</td></tr>
           <tr><td><code>{@link #View_scrollbarSize com.biyanzhi:scrollbarSize}</code></td><td> Sets the width of vertical scrollbars and height of horizontal scrollbars.</td></tr>
           <tr><td><code>{@link #View_scrollbarStyle com.biyanzhi:scrollbarStyle}</code></td><td>
             Controls the scrollbar style and position.</td></tr>
           <tr><td><code>{@link #View_scrollbarThumbHorizontal com.biyanzhi:scrollbarThumbHorizontal}</code></td><td> Defines the horizontal scrollbar thumb drawable.</td></tr>
           <tr><td><code>{@link #View_scrollbarThumbVertical com.biyanzhi:scrollbarThumbVertical}</code></td><td> Defines the vertical scrollbar thumb drawable.</td></tr>
           <tr><td><code>{@link #View_scrollbarTrackHorizontal com.biyanzhi:scrollbarTrackHorizontal}</code></td><td> Defines the horizontal scrollbar track drawable.</td></tr>
           <tr><td><code>{@link #View_scrollbarTrackVertical com.biyanzhi:scrollbarTrackVertical}</code></td><td> Defines the vertical scrollbar track drawable.</td></tr>
           <tr><td><code>{@link #View_scrollbars com.biyanzhi:scrollbars}</code></td><td> Defines which scrollbars should be displayed on scrolling or not.</td></tr>
           <tr><td><code>{@link #View_soundEffectsEnabled com.biyanzhi:soundEffectsEnabled}</code></td><td>
             Boolean that controls whether a view should have sound effects
             enabled for events such as clicking and touching.</td></tr>
           <tr><td><code>{@link #View_tag com.biyanzhi:tag}</code></td><td>
             Supply a tag for this view containing a String, to be retrieved
             later with {@link android.view.View#getTag View.getTag()} or
             searched for with {@link android.view.View#findViewWithTag
             View.findViewWithTag()}.</td></tr>
           <tr><td><code>{@link #View_textAlignment com.biyanzhi:textAlignment}</code></td><td>
             Alignment of the text.</td></tr>
           <tr><td><code>{@link #View_textDirection com.biyanzhi:textDirection}</code></td><td>
             Direction of the text.</td></tr>
           <tr><td><code>{@link #View_transformPivotX com.biyanzhi:transformPivotX}</code></td><td>
             x location of the pivot point around which the view will rotate and scale.</td></tr>
           <tr><td><code>{@link #View_transformPivotY com.biyanzhi:transformPivotY}</code></td><td>
             y location of the pivot point around which the view will rotate and scale.</td></tr>
           <tr><td><code>{@link #View_translationX com.biyanzhi:translationX}</code></td><td>
             translation in x of the view.</td></tr>
           <tr><td><code>{@link #View_translationY com.biyanzhi:translationY}</code></td><td>
             translation in y of the view.</td></tr>
           <tr><td><code>{@link #View_verticalScrollbarPosition com.biyanzhi:verticalScrollbarPosition}</code></td><td> Determines which side the vertical scroll bar should be placed on.</td></tr>
           <tr><td><code>{@link #View_visibility com.biyanzhi:visibility}</code></td><td> Controls the initial visibility of the view.</td></tr>
           </table>
           @see #View_accessibilityFocusable
           @see #View_alpha
           @see #View_clickable
           @see #View_contentDescription
           @see #View_drawingCacheQuality
           @see #View_duplicateParentState
           @see #View_fadeScrollbars
           @see #View_fadingEdge
           @see #View_fadingEdgeLength
           @see #View_filterTouchesWhenObscured
           @see #View_fitsSystemWindows
           @see #View_focusable
           @see #View_focusableInTouchMode
           @see #View_hapticFeedbackEnabled
           @see #View_id
           @see #View_importantForAccessibility
           @see #View_isScrollContainer
           @see #View_keepScreenOn
           @see #View_layerType
           @see #View_layoutDirection
           @see #View_longClickable
           @see #View_minHeight
           @see #View_minWidth
           @see #View_nextFocusDown
           @see #View_nextFocusForward
           @see #View_nextFocusLeft
           @see #View_nextFocusRight
           @see #View_nextFocusUp
           @see #View_onClick
           @see #View_overScrollMode
           @see #View_padding
           @see #View_paddingBottom
           @see #View_paddingLeft
           @see #View_paddingRight
           @see #View_paddingTop
           @see #View_requiresFadingEdge
           @see #View_rotation
           @see #View_rotationX
           @see #View_rotationY
           @see #View_saveEnabled
           @see #View_scaleX
           @see #View_scaleY
           @see #View_scrollX
           @see #View_scrollY
           @see #View_scrollbarAlwaysDrawHorizontalTrack
           @see #View_scrollbarAlwaysDrawVerticalTrack
           @see #View_scrollbarDefaultDelayBeforeFade
           @see #View_scrollbarFadeDuration
           @see #View_scrollbarSize
           @see #View_scrollbarStyle
           @see #View_scrollbarThumbHorizontal
           @see #View_scrollbarThumbVertical
           @see #View_scrollbarTrackHorizontal
           @see #View_scrollbarTrackVertical
           @see #View_scrollbars
           @see #View_soundEffectsEnabled
           @see #View_tag
           @see #View_textAlignment
           @see #View_textDirection
           @see #View_transformPivotX
           @see #View_transformPivotY
           @see #View_translationX
           @see #View_translationY
           @see #View_verticalScrollbarPosition
           @see #View_visibility
         */
        public static final int[] View = {
            0x7f010014, 0x7f010015, 0x7f010016, 0x7f010017,
            0x7f010018, 0x7f010019, 0x7f01001a, 0x7f01001b,
            0x7f01001c, 0x7f01001d, 0x7f01001e, 0x7f01001f,
            0x7f010020, 0x7f010021, 0x7f010022, 0x7f010023,
            0x7f010024, 0x7f010025, 0x7f010026, 0x7f010027,
            0x7f010028, 0x7f010029, 0x7f01002a, 0x7f01002b,
            0x7f01002c, 0x7f01002d, 0x7f01002e, 0x7f01002f,
            0x7f010030, 0x7f010031, 0x7f010032, 0x7f010033,
            0x7f010034, 0x7f010035, 0x7f010036, 0x7f010037,
            0x7f010038, 0x7f010039, 0x7f01003a, 0x7f01003b,
            0x7f01003c, 0x7f01003d, 0x7f01003e, 0x7f01003f,
            0x7f010040, 0x7f010041, 0x7f010042, 0x7f010043,
            0x7f010044, 0x7f010045, 0x7f010046, 0x7f010047,
            0x7f010048, 0x7f010049, 0x7f01004a, 0x7f01004b,
            0x7f01004c, 0x7f01004d, 0x7f01004e, 0x7f01004f,
            0x7f010050, 0x7f010051, 0x7f010052, 0x7f010053,
            0x7f010054
        };
        /**
          <p>
          @attr description
           @hide Controls whether this view can take accessibility focus. 


          <p>May be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
<p>May be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>auto</code></td><td>0</td><td>
                 The system determines whether the view can take accessibility focus - default
                 (recommended).
                 <p>
                 Such a view is consideted by the focus search if it is:
                 <ul>
                 <li>
                 Important for accessibility and actionable (clickable, long clickable, focusable)
                 </li>
                 <li>
                 Important for accessibility, not actionable (clickable, long clickable, focusable),
                 and does not have an actionable predecessor.
                 </li>
                 </ul>
                 An accessibility srvice can request putting accessibility focus on such a view.
                 </p>
            </td></tr>
<tr><td><code>yes</code></td><td>1</td><td>
                 The view can take accessibility focus.
                 <p>
                 A view that can take accessibility focus is always considered during focus
                 search and an accessibility service can request putting accessibility focus
                 on it.
                 </p>
            </td></tr>
<tr><td><code>no</code></td><td>2</td><td>
                 The view can not take accessibility focus.
                 <p>
                 A view that can not take accessibility focus is never considered during focus
                 search and an accessibility service can not request putting accessibility focus
                 on it.
                 </p>
            </td></tr>
</table>
          <p>This is a private symbol.
          @attr name com.biyanzhi:accessibilityFocusable
        */
        public static final int View_accessibilityFocusable = 64;
        /**
          <p>
          @attr description
          
             alpha property of the view, as a value between 0 (completely transparent) and 1
             (completely opaque).
        


          <p>Must be a floating point value, such as "<code>1.2</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.biyanzhi:alpha
        */
        public static final int View_alpha = 48;
        /**
          <p>
          @attr description
           Defines whether this view reacts to click events. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.biyanzhi:clickable
        */
        public static final int View_clickable = 34;
        /**
          <p>
          @attr description
          
             Defines text that briefly describes content of the view. This property is used
             primarily for accessibility. Since some views do not have textual
             representation this attribute can be used for providing such.
        


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.biyanzhi:contentDescription
        */
        public static final int View_contentDescription = 45;
        /**
          <p>
          @attr description
          
             Defines the quality of translucent drawing caches. This property is used
             only when the drawing cache is enabled and translucent. The default value is auto.
        


          <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>auto</code></td><td>0</td><td>
                 Lets the framework decide what quality level should be used
                 for the drawing cache.
            </td></tr>
<tr><td><code>low</code></td><td>1</td><td>
                 Low quality. When set to low quality, the drawing cache uses a lower color
                 depth, thus losing precision in rendering gradients, but uses less memory.
            </td></tr>
<tr><td><code>high</code></td><td>2</td><td>
                 High quality. When set to high quality, the drawing cache uses a higher
                 color depth but uses more memory.
            </td></tr>
</table>
          <p>This is a private symbol.
          @attr name com.biyanzhi:drawingCacheQuality
        */
        public static final int View_drawingCacheQuality = 38;
        /**
          <p>
          @attr description
          
             When this attribute is set to true, the view gets its drawable state
             (focused, pressed, etc.) from its direct parent rather than from itself.
        


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.biyanzhi:duplicateParentState
        */
        public static final int View_duplicateParentState = 40;
        /**
          <p>
          @attr description
           Defines whether to fade out scrollbars when they are not in use. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.biyanzhi:fadeScrollbars
        */
        public static final int View_fadeScrollbars = 16;
        /**
          <p>
          @attr description
          
             This attribute is deprecated and will be ignored as of
             API level 14 ({@link android.os.Build.VERSION_CODES#ICE_CREAM_SANDWICH}).
             Using fading edges may introduce noticeable performance
             degradations and should be used only when required by the application's
             visual design. To request fading edges with API level 14 and above,
             use the <code>android:requiresFadingEdge</code> attribute instead.
        


          <p>Must be one or more (separated by '|') of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>none</code></td><td>0x00000000</td><td> No edge is faded. </td></tr>
<tr><td><code>horizontal</code></td><td>0x00001000</td><td> Fades horizontal edges only. </td></tr>
<tr><td><code>vertical</code></td><td>0x00002000</td><td> Fades vertical edges only. </td></tr>
</table>
          <p>This is a private symbol.
          @attr name com.biyanzhi:fadingEdge
        */
        public static final int View_fadingEdge = 26;
        /**
          <p>
          @attr description
           Defines the length of the fading edges. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.biyanzhi:fadingEdgeLength
        */
        public static final int View_fadingEdgeLength = 28;
        /**
          <p>
          @attr description
          
             Specifies whether to filter touches when the view's window is obscured by
             another visible window.  When set to true, the view will not receive touches
             whenever a toast, dialog or other window appears above the view's window.
             Refer to the {@link android.view.View} security documentation for more details.
        


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.biyanzhi:filterTouchesWhenObscured
        */
        public static final int View_filterTouchesWhenObscured = 37;
        /**
          <p>
          @attr description
          
             Boolean internal attribute to adjust view layout based on
             system windows such as the status bar.
             If true, adjusts the padding of this view to leave space for the system windows.
             Will only take effect if this view is in a non-embedded activity.
        


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.biyanzhi:fitsSystemWindows
        */
        public static final int View_fitsSystemWindows = 12;
        /**
          <p>
          @attr description
           Sets the padding, in pixels, of the start edge; see {@link android.R.attr#padding}. 
 <attr name="paddingStart" format="dimension" /> 
 Sets the padding, in pixels, of the end edge; see {@link android.R.attr#padding}. 
 <attr name="paddingEnd" format="dimension" /> 

             Boolean that controls whether a view can take focus.  By default the user can not
             move focus to a view; by setting this attribute to true the view is
             allowed to take focus.  This value does not impact the behavior of
             directly calling {@link android.view.View#requestFocus}, which will
             always request focus regardless of this view.  It only impacts where
             focus navigation will try to move focus.
        


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.biyanzhi:focusable
        */
        public static final int View_focusable = 9;
        /**
          <p>
          @attr description
          
             Boolean that controls whether a view can take focus while in touch mode.
             If this is true for a view, that view can gain focus when clicked on, and can keep
             focus if another view is clicked on that doesn't have this attribute set to true.
        


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.biyanzhi:focusableInTouchMode
        */
        public static final int View_focusableInTouchMode = 10;
        /**
          <p>
          @attr description
          
             Boolean that controls whether a view should have haptic feedback
             enabled for events such as long presses.
        


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.biyanzhi:hapticFeedbackEnabled
        */
        public static final int View_hapticFeedbackEnabled = 44;
        /**
          <p>
          @attr description
          
             Supply an identifier name for this view, to later retrieve it
             with {@link android.view.View#findViewById View.findViewById()} or
             {@link android.app.Activity#findViewById Activity.findViewById()}.
             This must be a
             resource reference; typically you set this using the
             <code>@+</code> syntax to create a new ID resources.
             For example: <code>android:id="@+id/my_id"</code> which
             allows you to later retrieve the view
             with <code>findViewById(R.id.my_id)</code>.
        


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.biyanzhi:id
        */
        public static final int View_id = 0;
        /**
          <p>
          @attr description
          
             Controls how this View is important for accessibility which is if it fires
             accessibility events and if it is reported to accessibility services that
             query the screen. Note: While not recommended, an accessibility service may
             decide to ignore this attribute and operate on all views in the view tree.
        


          <p>May be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
<p>May be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>auto</code></td><td>0</td><td>
                 The system determines whether the view is important for accessibility - default
                 (recommended).
            </td></tr>
<tr><td><code>yes</code></td><td>1</td><td> The view is important for accessibility. </td></tr>
<tr><td><code>no</code></td><td>2</td><td> The view is not important for accessibility. </td></tr>
</table>
          <p>This is a private symbol.
          @attr name com.biyanzhi:importantForAccessibility
        */
        public static final int View_importantForAccessibility = 63;
        /**
          <p>
          @attr description
          
             Set this if the view will serve as a scrolling container, meaing
             that it can be resized to shrink its overall window so that there
             will be space for an input method.  If not set, the default
             value will be true if "scrollbars" has the vertical scrollbar
             set, else it will be false.
        


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.biyanzhi:isScrollContainer
        */
        public static final int View_isScrollContainer = 15;
        /**
          <p>
          @attr description
          
             Controls whether the view's window should keep the screen on
             while visible.
        


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.biyanzhi:keepScreenOn
        */
        public static final int View_keepScreenOn = 39;
        /**
          <p>
          @attr description
          
             Specifies the type of layer backing this view. The default value is none.
             Refer to {@link android.view.View#setLayerType(int, android.graphics.Paint)}
             for more information.
        


          <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>none</code></td><td>0</td><td> Don't use a layer. </td></tr>
<tr><td><code>software</code></td><td>1</td><td>
                 Use a software layer. Refer to
                 {@link android.view.View#setLayerType(int, android.graphics.Paint) for
                 more information.
            </td></tr>
<tr><td><code>hardware</code></td><td>2</td><td>
                 Use a hardware layer. Refer to
                 {@link android.view.View#setLayerType(int, android.graphics.Paint) for
                 more information.
            </td></tr>
</table>
          <p>This is a private symbol.
          @attr name com.biyanzhi:layerType
        */
        public static final int View_layerType = 59;
        /**
          <p>
          @attr description
          
             Defines the direction of layout drawing. This typically is associated with writing
             direction of the language script used. The possible values are "ltr" for Left-to-Right,
             "rtl" for Right-to-Left, "locale" and "inherit" from parent view. If there is nothing
             to inherit, "locale" is used. "locale" falls back to "en-US". "ltr" is the direction
             used in "en-US". The default for this attribute is "inherit".
        


          <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>ltr</code></td><td>0</td><td> Left-to-Right </td></tr>
<tr><td><code>rtl</code></td><td>1</td><td> Right-to-Left </td></tr>
<tr><td><code>inherit</code></td><td>2</td><td> Inherit from parent </td></tr>
<tr><td><code>locale</code></td><td>3</td><td> Locale </td></tr>
</table>
          <p>This is a private symbol.
          @attr name com.biyanzhi:layoutDirection
        */
        public static final int View_layoutDirection = 60;
        /**
          <p>
          @attr description
           Defines whether this view reacts to long click events. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.biyanzhi:longClickable
        */
        public static final int View_longClickable = 35;
        /**
          <p>
          @attr description
          
             Defines the minimum height of the view. It is not guaranteed
             the view will be able to achieve this minimum height (for example,
             if its parent layout constrains it with less available height).
        


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.biyanzhi:minHeight
        */
        public static final int View_minHeight = 41;
        /**
          <p>
          @attr description
          
             Defines the minimum width of the view. It is not guaranteed
             the view will be able to achieve this minimum width (for example,
             if its parent layout constrains it with less available width).
        


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.biyanzhi:minWidth
        */
        public static final int View_minWidth = 42;
        /**
          <p>
          @attr description
          
             Defines the next view to give focus to when the next focus is
             {@link android.view.View#FOCUS_DOWN}

             If the reference refers to a view that does not exist or is part
             of a hierarchy that is invisible, a {@link java.lang.RuntimeException}
             will result when the reference is accessed.
        


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.biyanzhi:nextFocusDown
        */
        public static final int View_nextFocusDown = 32;
        /**
          <p>
          @attr description
          
             Defines the next view to give focus to when the next focus is
             {@link android.view.View#FOCUS_FORWARD}

             If the reference refers to a view that does not exist or is part
             of a hierarchy that is invisible, a {@link java.lang.RuntimeException}
             will result when the reference is accessed.
        


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.biyanzhi:nextFocusForward
        */
        public static final int View_nextFocusForward = 33;
        /**
          <p>
          @attr description
          
             Defines the next view to give focus to when the next focus is
             {@link android.view.View#FOCUS_LEFT}.

             If the reference refers to a view that does not exist or is part
             of a hierarchy that is invisible, a {@link java.lang.RuntimeException}
             will result when the reference is accessed.
        


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.biyanzhi:nextFocusLeft
        */
        public static final int View_nextFocusLeft = 29;
        /**
          <p>
          @attr description
          
             Defines the next view to give focus to when the next focus is
             {@link android.view.View#FOCUS_RIGHT}

             If the reference refers to a view that does not exist or is part
             of a hierarchy that is invisible, a {@link java.lang.RuntimeException}
             will result when the reference is accessed.
        


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.biyanzhi:nextFocusRight
        */
        public static final int View_nextFocusRight = 30;
        /**
          <p>
          @attr description
          
             Defines the next view to give focus to when the next focus is
             {@link android.view.View#FOCUS_UP}

             If the reference refers to a view that does not exist or is part
             of a hierarchy that is invisible, a {@link java.lang.RuntimeException}
             will result when the reference is accessed.
        


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.biyanzhi:nextFocusUp
        */
        public static final int View_nextFocusUp = 31;
        /**
          <p>
          @attr description
          
             Name of the method in this View's context to invoke when the view is
             clicked. This name must correspond to a public method that takes
             exactly one parameter of type View. For instance, if you specify
             <code>android:onClick="sayHello"</code>, you must declare a
             <code>public void sayHello(View v)</code> method of your context
             (typically, your Activity).
        


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.biyanzhi:onClick
        */
        public static final int View_onClick = 46;
        /**
          <p>
          @attr description
          
             Defines over-scrolling behavior. This property is used only if the
             View is scrollable. Over-scrolling is the ability for the user to
             receive feedback when attempting to scroll beyond meaningful content.
        


          <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>always</code></td><td>0</td><td>
                 Always show over-scroll effects, even if the content fits entirely
                 within the available space.
            </td></tr>
<tr><td><code>ifContentScrolls</code></td><td>1</td><td>
                 Only show over-scroll effects if the content is large
                 enough to meaningfully scroll.
            </td></tr>
<tr><td><code>never</code></td><td>2</td><td> Never show over-scroll effects. </td></tr>
</table>
          <p>This is a private symbol.
          @attr name com.biyanzhi:overScrollMode
        */
        public static final int View_overScrollMode = 47;
        /**
          <p>
          @attr description
          
             A drawable to use as the background.  This can be either a reference
             to a full drawable resource (such as a PNG image, 9-patch,
             XML state list description, etc), or a solid color such as "#ff000000"
            (black).
        
 <attr name="background" format="reference|color" /> 

             Sets the padding, in pixels, of all four edges.  Padding is defined as
             space between the edges of the view and the view's content. A views size
             will include it's padding.  If a {@link android.R.attr#background}
             is provided, the padding will initially be set to that (0 if the
             drawable does not have padding).  Explicitly setting a padding value
             will override the corresponding padding found in the background.
        


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.biyanzhi:padding
        */
        public static final int View_padding = 4;
        /**
          <p>
          @attr description
           Sets the padding, in pixels, of the bottom edge; see {@link android.R.attr#padding}. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.biyanzhi:paddingBottom
        */
        public static final int View_paddingBottom = 8;
        /**
          <p>
          @attr description
           Sets the padding, in pixels, of the left edge; see {@link android.R.attr#padding}. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.biyanzhi:paddingLeft
        */
        public static final int View_paddingLeft = 5;
        /**
          <p>
          @attr description
           Sets the padding, in pixels, of the right edge; see {@link android.R.attr#padding}. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.biyanzhi:paddingRight
        */
        public static final int View_paddingRight = 7;
        /**
          <p>
          @attr description
           Sets the padding, in pixels, of the top edge; see {@link android.R.attr#padding}. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.biyanzhi:paddingTop
        */
        public static final int View_paddingTop = 6;
        /**
          <p>
          @attr description
           Defines which edges should be faded on scrolling. 


          <p>Must be one or more (separated by '|') of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>none</code></td><td>0x00000000</td><td> No edge is faded. </td></tr>
<tr><td><code>horizontal</code></td><td>0x00001000</td><td> Fades horizontal edges only. </td></tr>
<tr><td><code>vertical</code></td><td>0x00002000</td><td> Fades vertical edges only. </td></tr>
</table>
          <p>This is a private symbol.
          @attr name com.biyanzhi:requiresFadingEdge
        */
        public static final int View_requiresFadingEdge = 27;
        /**
          <p>
          @attr description
           rotation of the view, in degrees. 


          <p>Must be a floating point value, such as "<code>1.2</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.biyanzhi:rotation
        */
        public static final int View_rotation = 53;
        /**
          <p>
          @attr description
           rotation of the view around the x axis, in degrees. 


          <p>Must be a floating point value, such as "<code>1.2</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.biyanzhi:rotationX
        */
        public static final int View_rotationX = 54;
        /**
          <p>
          @attr description
           rotation of the view around the y axis, in degrees. 


          <p>Must be a floating point value, such as "<code>1.2</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.biyanzhi:rotationY
        */
        public static final int View_rotationY = 55;
        /**
          <p>
          @attr description
          
             If unset, no state will be saved for this view when it is being
             frozen. The default is true, allowing the view to be saved
             (however it also must have an ID assigned to it for its
             state to be saved).  Setting this to false only disables the
             state for this view, not for its children which may still
             be saved.
        


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.biyanzhi:saveEnabled
        */
        public static final int View_saveEnabled = 36;
        /**
          <p>
          @attr description
           scale of the view in the x direction. 


          <p>Must be a floating point value, such as "<code>1.2</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.biyanzhi:scaleX
        */
        public static final int View_scaleX = 56;
        /**
          <p>
          @attr description
           scale of the view in the y direction. 


          <p>Must be a floating point value, such as "<code>1.2</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.biyanzhi:scaleY
        */
        public static final int View_scaleY = 57;
        /**
          <p>
          @attr description
           The initial horizontal scroll offset, in pixels. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.biyanzhi:scrollX
        */
        public static final int View_scrollX = 2;
        /**
          <p>
          @attr description
           The initial vertical scroll offset, in pixels. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.biyanzhi:scrollY
        */
        public static final int View_scrollY = 3;
        /**
          <p>
          @attr description
           Defines whether the horizontal scrollbar track should always be drawn. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.biyanzhi:scrollbarAlwaysDrawHorizontalTrack
        */
        public static final int View_scrollbarAlwaysDrawHorizontalTrack = 24;
        /**
          <p>
          @attr description
           Defines whether the vertical scrollbar track should always be drawn. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.biyanzhi:scrollbarAlwaysDrawVerticalTrack
        */
        public static final int View_scrollbarAlwaysDrawVerticalTrack = 25;
        /**
          <p>
          @attr description
           Defines the delay in milliseconds that a scrollbar waits before fade out. 


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.biyanzhi:scrollbarDefaultDelayBeforeFade
        */
        public static final int View_scrollbarDefaultDelayBeforeFade = 18;
        /**
          <p>
          @attr description
           Defines the delay in milliseconds that a scrollbar takes to fade out. 


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.biyanzhi:scrollbarFadeDuration
        */
        public static final int View_scrollbarFadeDuration = 17;
        /**
          <p>
          @attr description
           Sets the width of vertical scrollbars and height of horizontal scrollbars. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.biyanzhi:scrollbarSize
        */
        public static final int View_scrollbarSize = 19;
        /**
          <p>
          @attr description
          
             Controls the scrollbar style and position. The scrollbars can be overlaid or
             inset. When inset, they add to the padding of the view. And the
             scrollbars can be drawn inside the padding area or on the edge of
             the view. For example, if a view has a background drawable and you
             want to draw the scrollbars inside the padding specified by the
             drawable, you can use insideOverlay or insideInset. If you want them
             to appear at the edge of the view, ignoring the padding, then you can
             use outsideOverlay or outsideInset.
        


          <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>insideOverlay</code></td><td>0x0</td><td> Inside the padding and overlaid </td></tr>
<tr><td><code>insideInset</code></td><td>0x01000000</td><td> Inside the padding and inset </td></tr>
<tr><td><code>outsideOverlay</code></td><td>0x02000000</td><td> Edge of the view and overlaid </td></tr>
<tr><td><code>outsideInset</code></td><td>0x03000000</td><td> Edge of the view and inset </td></tr>
</table>
          <p>This is a private symbol.
          @attr name com.biyanzhi:scrollbarStyle
        */
        public static final int View_scrollbarStyle = 14;
        /**
          <p>
          @attr description
           Defines the horizontal scrollbar thumb drawable. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.biyanzhi:scrollbarThumbHorizontal
        */
        public static final int View_scrollbarThumbHorizontal = 20;
        /**
          <p>
          @attr description
           Defines the vertical scrollbar thumb drawable. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.biyanzhi:scrollbarThumbVertical
        */
        public static final int View_scrollbarThumbVertical = 21;
        /**
          <p>
          @attr description
           Defines the horizontal scrollbar track drawable. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.biyanzhi:scrollbarTrackHorizontal
        */
        public static final int View_scrollbarTrackHorizontal = 22;
        /**
          <p>
          @attr description
           Defines the vertical scrollbar track drawable. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.biyanzhi:scrollbarTrackVertical
        */
        public static final int View_scrollbarTrackVertical = 23;
        /**
          <p>
          @attr description
           Defines which scrollbars should be displayed on scrolling or not. 


          <p>Must be one or more (separated by '|') of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>none</code></td><td>0x00000000</td><td> No scrollbar is displayed. </td></tr>
<tr><td><code>horizontal</code></td><td>0x00000100</td><td> Displays horizontal scrollbar only. </td></tr>
<tr><td><code>vertical</code></td><td>0x00000200</td><td> Displays vertical scrollbar only. </td></tr>
</table>
          <p>This is a private symbol.
          @attr name com.biyanzhi:scrollbars
        */
        public static final int View_scrollbars = 13;
        /**
          <p>
          @attr description
          
             Boolean that controls whether a view should have sound effects
             enabled for events such as clicking and touching.
        


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.biyanzhi:soundEffectsEnabled
        */
        public static final int View_soundEffectsEnabled = 43;
        /**
          <p>
          @attr description
          
             Supply a tag for this view containing a String, to be retrieved
             later with {@link android.view.View#getTag View.getTag()} or
             searched for with {@link android.view.View#findViewWithTag
             View.findViewWithTag()}.  It is generally preferable to use
             IDs (through the android:id attribute) instead of tags because
             they are faster and allow for compile-time type checking.
        


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.biyanzhi:tag
        */
        public static final int View_tag = 1;
        /**
          <p>
          @attr description
          
             Alignment of the text. A heuristic is used to determine the resolved
            text alignment.
        


          <p>May be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
<p>May be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>inherit</code></td><td>0</td><td> Default </td></tr>
<tr><td><code>gravity</code></td><td>1</td><td>
                 Default for the root view. The gravity determines the alignment, ALIGN_NORMAL,
                ALIGN_CENTER, or ALIGN_OPPOSITE, which are relative to each paragraph’s
                text direction
            </td></tr>
<tr><td><code>textStart</code></td><td>2</td><td> Align to the start of the paragraph, e.g. ALIGN_NORMAL. </td></tr>
<tr><td><code>textEnd</code></td><td>3</td><td> Align to the end of the paragraph, e.g. ALIGN_OPPOSITE. </td></tr>
<tr><td><code>center</code></td><td>4</td><td> Center the paragraph, e.g. ALIGN_CENTER. </td></tr>
<tr><td><code>viewStart</code></td><td>5</td><td>
                 Align to the start of the view, which is ALIGN_LEFT if the view’s resolved
                layoutDirection is LTR, and ALIGN_RIGHT otherwise.
            </td></tr>
<tr><td><code>viewEnd</code></td><td>6</td><td>
                 Align to the end of the view, which is ALIGN_RIGHT if the view’s resolved
                layoutDirection is LTR, and ALIGN_LEFT otherwise
            </td></tr>
</table>
          <p>This is a private symbol.
          @attr name com.biyanzhi:textAlignment
        */
        public static final int View_textAlignment = 62;
        /**
          <p>
          @attr description
          
             Direction of the text. A heuristic is used to determine the resolved text direction
             of paragraphs.
        


          <p>May be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
<p>May be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>inherit</code></td><td>0</td><td> Default </td></tr>
<tr><td><code>firstStrong</code></td><td>1</td><td>
                 Default for the root view. The first strong directional character determines the
                 paragraph direction.  If there is no strong directional character, the paragraph
                 direction is the view’s resolved layout direction.
            </td></tr>
<tr><td><code>anyRtl</code></td><td>2</td><td>
                 The paragraph direction is RTL if it contains any strong RTL character, otherwise
                 it is LTR if it contains any strong LTR characters.  If there are neither, the
                 paragraph direction is the view’s resolved layout direction.
            </td></tr>
<tr><td><code>ltr</code></td><td>3</td><td> The paragraph direction is left to right. </td></tr>
<tr><td><code>rtl</code></td><td>4</td><td> The paragraph direction is right to left. </td></tr>
<tr><td><code>locale</code></td><td>5</td><td> The paragraph direction is coming from the system Locale. </td></tr>
</table>
          <p>This is a private symbol.
          @attr name com.biyanzhi:textDirection
        */
        public static final int View_textDirection = 61;
        /**
          <p>
          @attr description
          
             x location of the pivot point around which the view will rotate and scale.
             This xml attribute sets the pivotX property of the View.
        


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.biyanzhi:transformPivotX
        */
        public static final int View_transformPivotX = 51;
        /**
          <p>
          @attr description
          
             y location of the pivot point around which the view will rotate and scale.
             This xml attribute sets the pivotY property of the View.
        


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.biyanzhi:transformPivotY
        */
        public static final int View_transformPivotY = 52;
        /**
          <p>
          @attr description
          
             translation in x of the view. This value is added post-layout to the left
             property of the view, which is set by its layout.
        


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.biyanzhi:translationX
        */
        public static final int View_translationX = 49;
        /**
          <p>
          @attr description
          
             translation in y of the view. This value is added post-layout to the left
             property of the view, which is set by its layout.
        


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.biyanzhi:translationY
        */
        public static final int View_translationY = 50;
        /**
          <p>
          @attr description
           Determines which side the vertical scroll bar should be placed on. 


          <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>defaultPosition</code></td><td>0</td><td> Place the scroll bar wherever the system default determines. </td></tr>
<tr><td><code>left</code></td><td>1</td><td> Place the scroll bar on the left. </td></tr>
<tr><td><code>right</code></td><td>2</td><td> Place the scroll bar on the right. </td></tr>
</table>
          <p>This is a private symbol.
          @attr name com.biyanzhi:verticalScrollbarPosition
        */
        public static final int View_verticalScrollbarPosition = 58;
        /**
          <p>
          @attr description
           Controls the initial visibility of the view. 


          <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>visible</code></td><td>0</td><td> Visible on screen; the default value. </td></tr>
<tr><td><code>invisible</code></td><td>1</td><td> Not displayed, but taken into account during layout (space is left for it). </td></tr>
<tr><td><code>gone</code></td><td>2</td><td> Completely hidden, as if the view had not been added. </td></tr>
</table>
          <p>This is a private symbol.
          @attr name com.biyanzhi:visibility
        */
        public static final int View_visibility = 11;
        /** 
         Attributes that can be used with a {@link android.view.ViewGroup} or any
         of its subclasses.  Also see {@link #ViewGroup_Layout} for
         attributes that this class processes in its children.
    
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #ViewGroup_addStatesFromChildren com.biyanzhi:addStatesFromChildren}</code></td><td>
             Sets whether this ViewGroup's drawable states also include
             its children's drawable states.</td></tr>
           <tr><td><code>{@link #ViewGroup_alwaysDrawnWithCache com.biyanzhi:alwaysDrawnWithCache}</code></td><td>
             Defines whether the ViewGroup should always draw its children using their
             drawing cache or not.</td></tr>
           <tr><td><code>{@link #ViewGroup_animateLayoutChanges com.biyanzhi:animateLayoutChanges}</code></td><td>
             Defines whether changes in layout (caused by adding and removing items) should
             cause a LayoutTransition to run.</td></tr>
           <tr><td><code>{@link #ViewGroup_animationCache com.biyanzhi:animationCache}</code></td><td>
             Defines whether layout animations should create a drawing cache for their
             children.</td></tr>
           <tr><td><code>{@link #ViewGroup_clipChildren com.biyanzhi:clipChildren}</code></td><td>
             Defines whether a child is limited to draw inside of its bounds or not.</td></tr>
           <tr><td><code>{@link #ViewGroup_clipToPadding com.biyanzhi:clipToPadding}</code></td><td>
             Defines whether the ViewGroup will clip its drawing surface so as to exclude
             the padding area.</td></tr>
           <tr><td><code>{@link #ViewGroup_descendantFocusability com.biyanzhi:descendantFocusability}</code></td><td>
             Defines the relationship between the ViewGroup and its descendants
             when looking for a View to take focus.</td></tr>
           <tr><td><code>{@link #ViewGroup_layoutAnimation com.biyanzhi:layoutAnimation}</code></td><td>
             Defines the layout animation to use the first time the ViewGroup is laid out.</td></tr>
           <tr><td><code>{@link #ViewGroup_persistentDrawingCache com.biyanzhi:persistentDrawingCache}</code></td><td>
             Defines the persistence of the drawing cache.</td></tr>
           <tr><td><code>{@link #ViewGroup_splitMotionEvents com.biyanzhi:splitMotionEvents}</code></td><td>
             Sets whether this ViewGroup should split MotionEvents
             to separate child views during touch event dispatch.</td></tr>
           </table>
           @see #ViewGroup_addStatesFromChildren
           @see #ViewGroup_alwaysDrawnWithCache
           @see #ViewGroup_animateLayoutChanges
           @see #ViewGroup_animationCache
           @see #ViewGroup_clipChildren
           @see #ViewGroup_clipToPadding
           @see #ViewGroup_descendantFocusability
           @see #ViewGroup_layoutAnimation
           @see #ViewGroup_persistentDrawingCache
           @see #ViewGroup_splitMotionEvents
         */
        public static final int[] ViewGroup = {
            0x7f010055, 0x7f010056, 0x7f010057, 0x7f010058,
            0x7f010059, 0x7f01005a, 0x7f01005b, 0x7f01005c,
            0x7f01005d, 0x7f01005e
        };
        /**
          <p>
          @attr description
          
             Sets whether this ViewGroup's drawable states also include
             its children's drawable states.  This is used, for example, to
             make a group appear to be focused when its child EditText or button
             is focused.
        


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.biyanzhi:addStatesFromChildren
        */
        public static final int ViewGroup_addStatesFromChildren = 7;
        /**
          <p>
          @attr description
          
             Defines whether the ViewGroup should always draw its children using their
             drawing cache or not. The default value is true.
        


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.biyanzhi:alwaysDrawnWithCache
        */
        public static final int ViewGroup_alwaysDrawnWithCache = 6;
        /**
          <p>
          @attr description
          
             Defines whether changes in layout (caused by adding and removing items) should
             cause a LayoutTransition to run. When this flag is set to true, a default
             LayoutTransition object will be set on the ViewGroup container and default
             animations will run when these layout changes occur.
        


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.biyanzhi:animateLayoutChanges
        */
        public static final int ViewGroup_animateLayoutChanges = 0;
        /**
          <p>
          @attr description
          
             Defines whether layout animations should create a drawing cache for their
             children. Enabling the animation cache consumes more memory and requires
             a longer initialization but provides better performance. The animation
             cache is enabled by default.
        


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.biyanzhi:animationCache
        */
        public static final int ViewGroup_animationCache = 4;
        /**
          <p>
          @attr description
          
             Defines whether a child is limited to draw inside of its bounds or not.
             This is useful with animations that scale the size of the children to more
             than 100% for instance. In such a case, this property should be set to false
             to allow the children to draw outside of their bounds. The default value of
             this property is true.
        


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.biyanzhi:clipChildren
        */
        public static final int ViewGroup_clipChildren = 1;
        /**
          <p>
          @attr description
          
             Defines whether the ViewGroup will clip its drawing surface so as to exclude
             the padding area. This property is set to true by default.
        


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.biyanzhi:clipToPadding
        */
        public static final int ViewGroup_clipToPadding = 2;
        /**
          <p>
          @attr description
          
             Defines the relationship between the ViewGroup and its descendants
             when looking for a View to take focus.
        


          <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>beforeDescendants</code></td><td>0</td><td> The ViewGroup will get focus before any of its descendants. </td></tr>
<tr><td><code>afterDescendants</code></td><td>1</td><td> The ViewGroup will get focus only if none of its descendants want it. </td></tr>
<tr><td><code>blocksDescendants</code></td><td>2</td><td> The ViewGroup will block its descendants from receiving focus. </td></tr>
</table>
          <p>This is a private symbol.
          @attr name com.biyanzhi:descendantFocusability
        */
        public static final int ViewGroup_descendantFocusability = 8;
        /**
          <p>
          @attr description
          
             Defines the layout animation to use the first time the ViewGroup is laid out.
             Layout animations can also be started manually after the first layout.
        


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.biyanzhi:layoutAnimation
        */
        public static final int ViewGroup_layoutAnimation = 3;
        /**
          <p>
          @attr description
          
             Defines the persistence of the drawing cache. The drawing cache might be
             enabled by a ViewGroup for all its children in specific situations (for
             instance during a scrolling.) This property lets you persist the cache
             in memory after its initial usage. Persisting the cache consumes more
             memory but may prevent frequent garbage collection is the cache is created
             over and over again. By default the persistence is set to scrolling.
        


          <p>Must be one or more (separated by '|') of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>none</code></td><td>0x0</td><td> The drawing cache is not persisted after use. </td></tr>
<tr><td><code>animation</code></td><td>0x1</td><td> The drawing cache is persisted after a layout animation. </td></tr>
<tr><td><code>scrolling</code></td><td>0x2</td><td> The drawing cache is persisted after a scroll. </td></tr>
<tr><td><code>all</code></td><td>0x3</td><td> The drawing cache is always persisted. </td></tr>
</table>
          <p>This is a private symbol.
          @attr name com.biyanzhi:persistentDrawingCache
        */
        public static final int ViewGroup_persistentDrawingCache = 5;
        /**
          <p>
          @attr description
          
             Sets whether this ViewGroup should split MotionEvents
             to separate child views during touch event dispatch.
             If false (default), touch events will be dispatched to
             the child view where the first pointer went down until
             the last pointer goes up.
             If true, touch events may be dispatched to multiple children.
             MotionEvents for each pointer will be dispatched to the child
             view where the initial ACTION_DOWN event happened.
             See {@link android.view.ViewGroup#setMotionEventSplittingEnabled(boolean)}
             for more information.
        


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.biyanzhi:splitMotionEvents
        */
        public static final int ViewGroup_splitMotionEvents = 9;
    };
}
